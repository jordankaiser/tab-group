{"mappings":"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","sources":["node_modules/@parcel/runtime-browser-hmr/lib/runtime-825e1fcfb7adec58.js","src/app.js","node_modules/embla-carousel/esm/embla-carousel.esm.js","node_modules/embla-carousel/src/components/utils.ts","node_modules/embla-carousel/src/components/Alignment.ts","node_modules/embla-carousel/src/components/EventStore.ts","node_modules/embla-carousel/src/components/Animations.ts","node_modules/embla-carousel/src/components/Axis.ts","node_modules/embla-carousel/src/components/Limit.ts","node_modules/embla-carousel/src/components/Counter.ts","node_modules/embla-carousel/src/components/Direction.ts","node_modules/embla-carousel/src/components/DragHandler.ts","node_modules/embla-carousel/src/components/DragTracker.ts","node_modules/embla-carousel/src/components/NodeRects.ts","node_modules/embla-carousel/src/components/PercentOfView.ts","node_modules/embla-carousel/src/components/ResizeHandler.ts","node_modules/embla-carousel/src/components/ScrollBody.ts","node_modules/embla-carousel/src/components/ScrollBounds.ts","node_modules/embla-carousel/src/components/ScrollContain.ts","node_modules/embla-carousel/src/components/ScrollLimit.ts","node_modules/embla-carousel/src/components/ScrollLooper.ts","node_modules/embla-carousel/src/components/ScrollProgress.ts","node_modules/embla-carousel/src/components/ScrollSnaps.ts","node_modules/embla-carousel/src/components/SlideRegistry.ts","node_modules/embla-carousel/src/components/ScrollTarget.ts","node_modules/embla-carousel/src/components/ScrollTo.ts","node_modules/embla-carousel/src/components/SlideFocus.ts","node_modules/embla-carousel/src/components/Vector1d.ts","node_modules/embla-carousel/src/components/Translate.ts","node_modules/embla-carousel/src/components/SlideLooper.ts","node_modules/embla-carousel/src/components/SlidesHandler.ts","node_modules/embla-carousel/src/components/SlidesInView.ts","node_modules/embla-carousel/src/components/SlideSizes.ts","node_modules/embla-carousel/src/components/SlidesToScroll.ts","node_modules/embla-carousel/src/components/Engine.ts","node_modules/embla-carousel/src/components/EventHandler.ts","node_modules/embla-carousel/src/components/Options.ts","node_modules/embla-carousel/src/components/OptionsHandler.ts","node_modules/embla-carousel/src/components/PluginsHandler.ts","node_modules/embla-carousel/src/components/EmblaCarousel.ts","node_modules/@parcel/transformer-js/src/esmodule-helpers.js"],"sourcesContent":["var HMR_HOST = null;var HMR_PORT = null;var HMR_SECURE = false;var HMR_ENV_HASH = \"d6ea1d42532a7575\";module.bundle.HMR_BUNDLE_ID = \"fe4256060641b553\";\"use strict\";\n\n/* global HMR_HOST, HMR_PORT, HMR_ENV_HASH, HMR_SECURE, chrome, browser, __parcel__import__, __parcel__importScripts__, ServiceWorkerGlobalScope */\n/*::\nimport type {\n  HMRAsset,\n  HMRMessage,\n} from '@parcel/reporter-dev-server/src/HMRServer.js';\ninterface ParcelRequire {\n  (string): mixed;\n  cache: {|[string]: ParcelModule|};\n  hotData: {|[string]: mixed|};\n  Module: any;\n  parent: ?ParcelRequire;\n  isParcelRequire: true;\n  modules: {|[string]: [Function, {|[string]: string|}]|};\n  HMR_BUNDLE_ID: string;\n  root: ParcelRequire;\n}\ninterface ParcelModule {\n  hot: {|\n    data: mixed,\n    accept(cb: (Function) => void): void,\n    dispose(cb: (mixed) => void): void,\n    // accept(deps: Array<string> | string, cb: (Function) => void): void,\n    // decline(): void,\n    _acceptCallbacks: Array<(Function) => void>,\n    _disposeCallbacks: Array<(mixed) => void>,\n  |};\n}\ninterface ExtensionContext {\n  runtime: {|\n    reload(): void,\n    getURL(url: string): string;\n    getManifest(): {manifest_version: number, ...};\n  |};\n}\ndeclare var module: {bundle: ParcelRequire, ...};\ndeclare var HMR_HOST: string;\ndeclare var HMR_PORT: string;\ndeclare var HMR_ENV_HASH: string;\ndeclare var HMR_SECURE: boolean;\ndeclare var chrome: ExtensionContext;\ndeclare var browser: ExtensionContext;\ndeclare var __parcel__import__: (string) => Promise<void>;\ndeclare var __parcel__importScripts__: (string) => Promise<void>;\ndeclare var globalThis: typeof self;\ndeclare var ServiceWorkerGlobalScope: Object;\n*/\nvar OVERLAY_ID = '__parcel__error__overlay__';\nvar OldModule = module.bundle.Module;\nfunction Module(moduleName) {\n  OldModule.call(this, moduleName);\n  this.hot = {\n    data: module.bundle.hotData[moduleName],\n    _acceptCallbacks: [],\n    _disposeCallbacks: [],\n    accept: function (fn) {\n      this._acceptCallbacks.push(fn || function () {});\n    },\n    dispose: function (fn) {\n      this._disposeCallbacks.push(fn);\n    }\n  };\n  module.bundle.hotData[moduleName] = undefined;\n}\nmodule.bundle.Module = Module;\nmodule.bundle.hotData = {};\nvar checkedAssets /*: {|[string]: boolean|} */, assetsToDispose /*: Array<[ParcelRequire, string]> */, assetsToAccept /*: Array<[ParcelRequire, string]> */;\n\nfunction getHostname() {\n  return HMR_HOST || (location.protocol.indexOf('http') === 0 ? location.hostname : 'localhost');\n}\nfunction getPort() {\n  return HMR_PORT || location.port;\n}\n\n// eslint-disable-next-line no-redeclare\nvar parent = module.bundle.parent;\nif ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {\n  var hostname = getHostname();\n  var port = getPort();\n  var protocol = HMR_SECURE || location.protocol == 'https:' && !/localhost|127.0.0.1|0.0.0.0/.test(hostname) ? 'wss' : 'ws';\n  var ws = new WebSocket(protocol + '://' + hostname + (port ? ':' + port : '') + '/');\n\n  // Web extension context\n  var extCtx = typeof chrome === 'undefined' ? typeof browser === 'undefined' ? null : browser : chrome;\n\n  // Safari doesn't support sourceURL in error stacks.\n  // eval may also be disabled via CSP, so do a quick check.\n  var supportsSourceURL = false;\n  try {\n    (0, eval)('throw new Error(\"test\"); //# sourceURL=test.js');\n  } catch (err) {\n    supportsSourceURL = err.stack.includes('test.js');\n  }\n\n  // $FlowFixMe\n  ws.onmessage = async function (event /*: {data: string, ...} */) {\n    checkedAssets = {} /*: {|[string]: boolean|} */;\n    assetsToAccept = [];\n    assetsToDispose = [];\n    var data /*: HMRMessage */ = JSON.parse(event.data);\n    if (data.type === 'update') {\n      // Remove error overlay if there is one\n      if (typeof document !== 'undefined') {\n        removeErrorOverlay();\n      }\n      let assets = data.assets.filter(asset => asset.envHash === HMR_ENV_HASH);\n\n      // Handle HMR Update\n      let handled = assets.every(asset => {\n        return asset.type === 'css' || asset.type === 'js' && hmrAcceptCheck(module.bundle.root, asset.id, asset.depsByBundle);\n      });\n      if (handled) {\n        console.clear();\n\n        // Dispatch custom event so other runtimes (e.g React Refresh) are aware.\n        if (typeof window !== 'undefined' && typeof CustomEvent !== 'undefined') {\n          window.dispatchEvent(new CustomEvent('parcelhmraccept'));\n        }\n        await hmrApplyUpdates(assets);\n\n        // Dispose all old assets.\n        let processedAssets = {} /*: {|[string]: boolean|} */;\n        for (let i = 0; i < assetsToDispose.length; i++) {\n          let id = assetsToDispose[i][1];\n          if (!processedAssets[id]) {\n            hmrDispose(assetsToDispose[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n\n        // Run accept callbacks. This will also re-execute other disposed assets in topological order.\n        processedAssets = {};\n        for (let i = 0; i < assetsToAccept.length; i++) {\n          let id = assetsToAccept[i][1];\n          if (!processedAssets[id]) {\n            hmrAccept(assetsToAccept[i][0], id);\n            processedAssets[id] = true;\n          }\n        }\n      } else fullReload();\n    }\n    if (data.type === 'error') {\n      // Log parcel errors to console\n      for (let ansiDiagnostic of data.diagnostics.ansi) {\n        let stack = ansiDiagnostic.codeframe ? ansiDiagnostic.codeframe : ansiDiagnostic.stack;\n        console.error('🚨 [parcel]: ' + ansiDiagnostic.message + '\\n' + stack + '\\n\\n' + ansiDiagnostic.hints.join('\\n'));\n      }\n      if (typeof document !== 'undefined') {\n        // Render the fancy html overlay\n        removeErrorOverlay();\n        var overlay = createErrorOverlay(data.diagnostics.html);\n        // $FlowFixMe\n        document.body.appendChild(overlay);\n      }\n    }\n  };\n  ws.onerror = function (e) {\n    console.error(e.message);\n  };\n  ws.onclose = function () {\n    console.warn('[parcel] 🚨 Connection to the HMR server was lost');\n  };\n}\nfunction removeErrorOverlay() {\n  var overlay = document.getElementById(OVERLAY_ID);\n  if (overlay) {\n    overlay.remove();\n    console.log('[parcel] ✨ Error resolved');\n  }\n}\nfunction createErrorOverlay(diagnostics) {\n  var overlay = document.createElement('div');\n  overlay.id = OVERLAY_ID;\n  let errorHTML = '<div style=\"background: black; opacity: 0.85; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; font-family: Menlo, Consolas, monospace; z-index: 9999;\">';\n  for (let diagnostic of diagnostics) {\n    let stack = diagnostic.frames.length ? diagnostic.frames.reduce((p, frame) => {\n      return `${p}\n<a href=\"/__parcel_launch_editor?file=${encodeURIComponent(frame.location)}\" style=\"text-decoration: underline; color: #888\" onclick=\"fetch(this.href); return false\">${frame.location}</a>\n${frame.code}`;\n    }, '') : diagnostic.stack;\n    errorHTML += `\n      <div>\n        <div style=\"font-size: 18px; font-weight: bold; margin-top: 20px;\">\n          🚨 ${diagnostic.message}\n        </div>\n        <pre>${stack}</pre>\n        <div>\n          ${diagnostic.hints.map(hint => '<div>💡 ' + hint + '</div>').join('')}\n        </div>\n        ${diagnostic.documentation ? `<div>📝 <a style=\"color: violet\" href=\"${diagnostic.documentation}\" target=\"_blank\">Learn more</a></div>` : ''}\n      </div>\n    `;\n  }\n  errorHTML += '</div>';\n  overlay.innerHTML = errorHTML;\n  return overlay;\n}\nfunction fullReload() {\n  if ('reload' in location) {\n    location.reload();\n  } else if (extCtx && extCtx.runtime && extCtx.runtime.reload) {\n    extCtx.runtime.reload();\n  }\n}\nfunction getParents(bundle, id) /*: Array<[ParcelRequire, string]> */{\n  var modules = bundle.modules;\n  if (!modules) {\n    return [];\n  }\n  var parents = [];\n  var k, d, dep;\n  for (k in modules) {\n    for (d in modules[k][1]) {\n      dep = modules[k][1][d];\n      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {\n        parents.push([bundle, k]);\n      }\n    }\n  }\n  if (bundle.parent) {\n    parents = parents.concat(getParents(bundle.parent, id));\n  }\n  return parents;\n}\nfunction updateLink(link) {\n  var href = link.getAttribute('href');\n  if (!href) {\n    return;\n  }\n  var newLink = link.cloneNode();\n  newLink.onload = function () {\n    if (link.parentNode !== null) {\n      // $FlowFixMe\n      link.parentNode.removeChild(link);\n    }\n  };\n  newLink.setAttribute('href',\n  // $FlowFixMe\n  href.split('?')[0] + '?' + Date.now());\n  // $FlowFixMe\n  link.parentNode.insertBefore(newLink, link.nextSibling);\n}\nvar cssTimeout = null;\nfunction reloadCSS() {\n  if (cssTimeout) {\n    return;\n  }\n  cssTimeout = setTimeout(function () {\n    var links = document.querySelectorAll('link[rel=\"stylesheet\"]');\n    for (var i = 0; i < links.length; i++) {\n      // $FlowFixMe[incompatible-type]\n      var href /*: string */ = links[i].getAttribute('href');\n      var hostname = getHostname();\n      var servedFromHMRServer = hostname === 'localhost' ? new RegExp('^(https?:\\\\/\\\\/(0.0.0.0|127.0.0.1)|localhost):' + getPort()).test(href) : href.indexOf(hostname + ':' + getPort());\n      var absolute = /^https?:\\/\\//i.test(href) && href.indexOf(location.origin) !== 0 && !servedFromHMRServer;\n      if (!absolute) {\n        updateLink(links[i]);\n      }\n    }\n    cssTimeout = null;\n  }, 50);\n}\nfunction hmrDownload(asset) {\n  if (asset.type === 'js') {\n    if (typeof document !== 'undefined') {\n      let script = document.createElement('script');\n      script.src = asset.url + '?t=' + Date.now();\n      if (asset.outputFormat === 'esmodule') {\n        script.type = 'module';\n      }\n      return new Promise((resolve, reject) => {\n        var _document$head;\n        script.onload = () => resolve(script);\n        script.onerror = reject;\n        (_document$head = document.head) === null || _document$head === void 0 ? void 0 : _document$head.appendChild(script);\n      });\n    } else if (typeof importScripts === 'function') {\n      // Worker scripts\n      if (asset.outputFormat === 'esmodule') {\n        return __parcel__import__(asset.url + '?t=' + Date.now());\n      } else {\n        return new Promise((resolve, reject) => {\n          try {\n            __parcel__importScripts__(asset.url + '?t=' + Date.now());\n            resolve();\n          } catch (err) {\n            reject(err);\n          }\n        });\n      }\n    }\n  }\n}\nasync function hmrApplyUpdates(assets) {\n  global.parcelHotUpdate = Object.create(null);\n  let scriptsToRemove;\n  try {\n    // If sourceURL comments aren't supported in eval, we need to load\n    // the update from the dev server over HTTP so that stack traces\n    // are correct in errors/logs. This is much slower than eval, so\n    // we only do it if needed (currently just Safari).\n    // https://bugs.webkit.org/show_bug.cgi?id=137297\n    // This path is also taken if a CSP disallows eval.\n    if (!supportsSourceURL) {\n      let promises = assets.map(asset => {\n        var _hmrDownload;\n        return (_hmrDownload = hmrDownload(asset)) === null || _hmrDownload === void 0 ? void 0 : _hmrDownload.catch(err => {\n          // Web extension bugfix for Chromium\n          // https://bugs.chromium.org/p/chromium/issues/detail?id=1255412#c12\n          if (extCtx && extCtx.runtime && extCtx.runtime.getManifest().manifest_version == 3) {\n            if (typeof ServiceWorkerGlobalScope != 'undefined' && global instanceof ServiceWorkerGlobalScope) {\n              extCtx.runtime.reload();\n              return;\n            }\n            asset.url = extCtx.runtime.getURL('/__parcel_hmr_proxy__?url=' + encodeURIComponent(asset.url + '?t=' + Date.now()));\n            return hmrDownload(asset);\n          }\n          throw err;\n        });\n      });\n      scriptsToRemove = await Promise.all(promises);\n    }\n    assets.forEach(function (asset) {\n      hmrApply(module.bundle.root, asset);\n    });\n  } finally {\n    delete global.parcelHotUpdate;\n    if (scriptsToRemove) {\n      scriptsToRemove.forEach(script => {\n        if (script) {\n          var _document$head2;\n          (_document$head2 = document.head) === null || _document$head2 === void 0 ? void 0 : _document$head2.removeChild(script);\n        }\n      });\n    }\n  }\n}\nfunction hmrApply(bundle /*: ParcelRequire */, asset /*:  HMRAsset */) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (asset.type === 'css') {\n    reloadCSS();\n  } else if (asset.type === 'js') {\n    let deps = asset.depsByBundle[bundle.HMR_BUNDLE_ID];\n    if (deps) {\n      if (modules[asset.id]) {\n        // Remove dependencies that are removed and will become orphaned.\n        // This is necessary so that if the asset is added back again, the cache is gone, and we prevent a full page reload.\n        let oldDeps = modules[asset.id][1];\n        for (let dep in oldDeps) {\n          if (!deps[dep] || deps[dep] !== oldDeps[dep]) {\n            let id = oldDeps[dep];\n            let parents = getParents(module.bundle.root, id);\n            if (parents.length === 1) {\n              hmrDelete(module.bundle.root, id);\n            }\n          }\n        }\n      }\n      if (supportsSourceURL) {\n        // Global eval. We would use `new Function` here but browser\n        // support for source maps is better with eval.\n        (0, eval)(asset.output);\n      }\n\n      // $FlowFixMe\n      let fn = global.parcelHotUpdate[asset.id];\n      modules[asset.id] = [fn, deps];\n    } else if (bundle.parent) {\n      hmrApply(bundle.parent, asset);\n    }\n  }\n}\nfunction hmrDelete(bundle, id) {\n  let modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (modules[id]) {\n    // Collect dependencies that will become orphaned when this module is deleted.\n    let deps = modules[id][1];\n    let orphans = [];\n    for (let dep in deps) {\n      let parents = getParents(module.bundle.root, deps[dep]);\n      if (parents.length === 1) {\n        orphans.push(deps[dep]);\n      }\n    }\n\n    // Delete the module. This must be done before deleting dependencies in case of circular dependencies.\n    delete modules[id];\n    delete bundle.cache[id];\n\n    // Now delete the orphans.\n    orphans.forEach(id => {\n      hmrDelete(module.bundle.root, id);\n    });\n  } else if (bundle.parent) {\n    hmrDelete(bundle.parent, id);\n  }\n}\nfunction hmrAcceptCheck(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  if (hmrAcceptCheckOne(bundle, id, depsByBundle)) {\n    return true;\n  }\n\n  // Traverse parents breadth first. All possible ancestries must accept the HMR update, or we'll reload.\n  let parents = getParents(module.bundle.root, id);\n  let accepted = false;\n  while (parents.length > 0) {\n    let v = parents.shift();\n    let a = hmrAcceptCheckOne(v[0], v[1], null);\n    if (a) {\n      // If this parent accepts, stop traversing upward, but still consider siblings.\n      accepted = true;\n    } else {\n      // Otherwise, queue the parents in the next level upward.\n      let p = getParents(module.bundle.root, v[1]);\n      if (p.length === 0) {\n        // If there are no parents, then we've reached an entry without accepting. Reload.\n        accepted = false;\n        break;\n      }\n      parents.push(...p);\n    }\n  }\n  return accepted;\n}\nfunction hmrAcceptCheckOne(bundle /*: ParcelRequire */, id /*: string */, depsByBundle /*: ?{ [string]: { [string]: string } }*/) {\n  var modules = bundle.modules;\n  if (!modules) {\n    return;\n  }\n  if (depsByBundle && !depsByBundle[bundle.HMR_BUNDLE_ID]) {\n    // If we reached the root bundle without finding where the asset should go,\n    // there's nothing to do. Mark as \"accepted\" so we don't reload the page.\n    if (!bundle.parent) {\n      return true;\n    }\n    return hmrAcceptCheck(bundle.parent, id, depsByBundle);\n  }\n  if (checkedAssets[id]) {\n    return true;\n  }\n  checkedAssets[id] = true;\n  var cached = bundle.cache[id];\n  assetsToDispose.push([bundle, id]);\n  if (!cached || cached.hot && cached.hot._acceptCallbacks.length) {\n    assetsToAccept.push([bundle, id]);\n    return true;\n  }\n}\nfunction hmrDispose(bundle /*: ParcelRequire */, id /*: string */) {\n  var cached = bundle.cache[id];\n  bundle.hotData[id] = {};\n  if (cached && cached.hot) {\n    cached.hot.data = bundle.hotData[id];\n  }\n  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {\n    cached.hot._disposeCallbacks.forEach(function (cb) {\n      cb(bundle.hotData[id]);\n    });\n  }\n  delete bundle.cache[id];\n}\nfunction hmrAccept(bundle /*: ParcelRequire */, id /*: string */) {\n  // Execute the module.\n  bundle(id);\n\n  // Run the accept callbacks in the new version of the module.\n  var cached = bundle.cache[id];\n  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {\n    cached.hot._acceptCallbacks.forEach(function (cb) {\n      var assetsToAlsoAccept = cb(function () {\n        return getParents(module.bundle.root, id);\n      });\n      if (assetsToAlsoAccept && assetsToAccept.length) {\n        assetsToAlsoAccept.forEach(function (a) {\n          hmrDispose(a[0], a[1]);\n        });\n\n        // $FlowFixMe[method-unbinding]\n        assetsToAccept.push.apply(assetsToAccept, assetsToAlsoAccept);\n      }\n    });\n  }\n}","/*\n *   This content is licensed according to the W3C Software License at\n *   https://www.w3.org/Consortium/Legal/2015/copyright-software-and-document\n *\n *   File:   tabs-automatic.js\n *\n *   Desc:   Tablist widget that implements ARIA Authoring Practices\n */\n\nimport EmblaCarousel from 'embla-carousel'\n\n'use strict';\n\nclass TabPanel {\n  constructor(groupNode) {\n    this.tablistNode = groupNode;\n\n    this.tabs = [];\n\n    this.firstTab = null;\n    this.lastTab = null;\n\n    this.tabs = Array.from(this.tablistNode.querySelectorAll('[role=tab]'));\n    this.tabpanels = [];\n\n    for (var i = 0; i < this.tabs.length; i += 1) {\n      var tab = this.tabs[i];\n      var tabpanel = document.getElementById(tab.getAttribute('aria-controls'));\n\n      tab.tabIndex = -1;\n      tab.setAttribute('aria-selected', 'false');\n      this.tabpanels.push(tabpanel);\n\n      tab.addEventListener('keydown', this.onKeydown.bind(this));\n      tab.addEventListener('click', this.onClick.bind(this));\n\n      if (!this.firstTab) {\n        this.firstTab = tab;\n      }\n      this.lastTab = tab;\n    }\n\n    this.setSelectedTab(this.firstTab, false);\n  }\n\n  setSelectedTab(currentTab, setFocus) {\n    if (typeof setFocus !== 'boolean') {\n      setFocus = true;\n    }\n    for (var i = 0; i < this.tabs.length; i += 1) {\n      var tab = this.tabs[i];\n      if (currentTab === tab) {\n        tab.setAttribute('aria-selected', 'true');\n        tab.removeAttribute('tabindex');\n        this.tabpanels[i].classList.remove('is-hidden');\n        if (setFocus) {\n          tab.focus();\n        }\n      } else {\n        tab.setAttribute('aria-selected', 'false');\n        tab.tabIndex = -1;\n        this.tabpanels[i].classList.add('is-hidden');\n      }\n    }\n  }\n\n  setSelectedToPreviousTab(currentTab) {\n    var index;\n\n    if (currentTab === this.firstTab) {\n      this.setSelectedTab(this.lastTab);\n    } else {\n      index = this.tabs.indexOf(currentTab);\n      this.setSelectedTab(this.tabs[index - 1]);\n    }\n  }\n\n  setSelectedToNextTab(currentTab) {\n    var index;\n\n    if (currentTab === this.lastTab) {\n      this.setSelectedTab(this.firstTab);\n    } else {\n      index = this.tabs.indexOf(currentTab);\n      this.setSelectedTab(this.tabs[index + 1]);\n    }\n  }\n\n  /* EVENT HANDLERS */\n\n  onKeydown(event) {\n    var tgt = event.currentTarget;\n    const flag = false;\n\n    switch (event.key) {\n      case 'ArrowLeft':\n        this.setSelectedToPreviousTab(tgt);\n        flag = true;\n        break;\n\n      case 'ArrowRight':\n        this.setSelectedToNextTab(tgt);\n        flag = true;\n        break;\n\n      case 'Home':\n        this.setSelectedTab(this.firstTab);\n        flag = true;\n        break;\n\n      case 'End':\n        this.setSelectedTab(this.lastTab);\n        flag = true;\n        break;\n\n      default:\n        break;\n    }\n\n    if (flag) {\n      event.stopPropagation();\n      event.preventDefault();\n    }\n  }\n\n  onClick(event) {\n    this.setSelectedTab(event.currentTarget);\n  }\n}\n\n// Initialize tablist\n\nwindow.addEventListener('load', function () {\n  // Grab wrapper nodes\n  const rootNode = document.querySelector('.embla')\n  const viewportNode = rootNode.querySelector('.embla__viewport')\n\n  // Grab button nodes\n  const prevButtonNode = rootNode.querySelector('.tabs__prev')\n  const nextButtonNode = rootNode.querySelector('.tabs__next')\n\n  // Options.\n  const options = { loop: false, align: 'start' }\n\n  // Initialize the carousel\n  const embla = EmblaCarousel(viewportNode, options)\n\n  // Add click listeners\n  prevButtonNode.addEventListener('click', embla.scrollPrev, false)\n  nextButtonNode.addEventListener('click', embla.scrollNext, false)\n});\n",null,"import { PointerEventType } from './DragTracker'\n\nexport type WindowType = Window & typeof globalThis\n\nexport function isNumber(subject: unknown): subject is number {\n  return typeof subject === 'number'\n}\n\nexport function isString(subject: unknown): subject is string {\n  return typeof subject === 'string'\n}\n\nexport function isBoolean(subject: unknown): subject is boolean {\n  return typeof subject === 'boolean'\n}\n\nexport function isObject(subject: unknown): subject is Record<string, unknown> {\n  return Object.prototype.toString.call(subject) === '[object Object]'\n}\n\nexport function mathAbs(n: number): number {\n  return Math.abs(n)\n}\n\nexport function mathSign(n: number): number {\n  return Math.sign(n)\n}\n\nexport function deltaAbs(valueB: number, valueA: number): number {\n  return mathAbs(valueB - valueA)\n}\n\nexport function factorAbs(valueB: number, valueA: number): number {\n  if (valueB === 0 || valueA === 0) return 0\n  if (mathAbs(valueB) <= mathAbs(valueA)) return 0\n  const diff = deltaAbs(mathAbs(valueB), mathAbs(valueA))\n  return mathAbs(diff / valueB)\n}\n\nexport function arrayKeys<Type>(array: Type[]): number[] {\n  return objectKeys(array).map(Number)\n}\n\nexport function arrayLast<Type>(array: Type[]): Type {\n  return array[arrayLastIndex(array)]\n}\n\nexport function arrayLastIndex<Type>(array: Type[]): number {\n  return Math.max(0, array.length - 1)\n}\n\nexport function arrayIsLastIndex<Type>(array: Type[], index: number): boolean {\n  return index === arrayLastIndex(array)\n}\n\nexport function arrayFromNumber(n: number, startAt: number = 0): number[] {\n  return Array.from(Array(n), (_, i) => startAt + i)\n}\n\nexport function objectKeys<Type extends object>(object: Type): string[] {\n  return Object.keys(object)\n}\n\nexport function objectsMergeDeep(\n  objectA: Record<string, unknown>,\n  objectB: Record<string, unknown>\n): Record<string, unknown> {\n  return [objectA, objectB].reduce((mergedObjects, currentObject) => {\n    objectKeys(currentObject).forEach((key) => {\n      const valueA = mergedObjects[key]\n      const valueB = currentObject[key]\n      const areObjects = isObject(valueA) && isObject(valueB)\n\n      mergedObjects[key] = areObjects\n        ? objectsMergeDeep(valueA, valueB)\n        : valueB\n    })\n    return mergedObjects\n  }, {})\n}\n\nexport function isMouseEvent(\n  evt: PointerEventType,\n  ownerWindow: WindowType\n): evt is MouseEvent {\n  return (\n    typeof ownerWindow.MouseEvent !== 'undefined' &&\n    evt instanceof ownerWindow.MouseEvent\n  )\n}\n","import { isString } from './utils'\n\nexport type AlignmentOptionType =\n  | 'start'\n  | 'center'\n  | 'end'\n  | ((viewSize: number, snapSize: number, index: number) => number)\n\nexport type AlignmentType = {\n  measure: (n: number, index: number) => number\n}\n\nexport function Alignment(\n  align: AlignmentOptionType,\n  viewSize: number\n): AlignmentType {\n  const predefined = { start, center, end }\n\n  function start(): number {\n    return 0\n  }\n\n  function center(n: number): number {\n    return end(n) / 2\n  }\n\n  function end(n: number): number {\n    return viewSize - n\n  }\n\n  function measure(n: number, index: number): number {\n    if (isString(align)) return predefined[align](n)\n    return align(viewSize, n, index)\n  }\n\n  const self: AlignmentType = {\n    measure\n  }\n  return self\n}\n","type EventNameType = keyof DocumentEventMap | keyof WindowEventMap\ntype EventHandlerType = (evt: any) => void\ntype EventOptionsType = boolean | AddEventListenerOptions | undefined\ntype EventRemoverType = () => void\n\nexport type EventStoreType = {\n  add: (\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options?: EventOptionsType\n  ) => EventStoreType\n  clear: () => void\n}\n\nexport function EventStore(): EventStoreType {\n  let listeners: EventRemoverType[] = []\n\n  function add(\n    node: EventTarget,\n    type: EventNameType,\n    handler: EventHandlerType,\n    options: EventOptionsType = { passive: true }\n  ): EventStoreType {\n    let removeListener: EventRemoverType\n\n    if ('addEventListener' in node) {\n      node.addEventListener(type, handler, options)\n      removeListener = () => node.removeEventListener(type, handler, options)\n    } else {\n      const legacyMediaQueryList = <MediaQueryList>node\n      legacyMediaQueryList.addListener(handler)\n      removeListener = () => legacyMediaQueryList.removeListener(handler)\n    }\n\n    listeners.push(removeListener)\n    return self\n  }\n\n  function clear(): void {\n    listeners = listeners.filter((remove) => remove())\n  }\n\n  const self: EventStoreType = {\n    add,\n    clear\n  }\n  return self\n}\n","import { EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { mathAbs, WindowType } from './utils'\n\nexport type AnimationsUpdateType = (engine: EngineType) => void\nexport type AnimationsRenderType = (\n  engine: EngineType,\n  lagOffset: number\n) => void\n\nexport type AnimationsType = {\n  init: () => void\n  destroy: () => void\n  start: () => void\n  stop: () => void\n  update: () => void\n  render: (lagOffset: number) => void\n}\n\nexport function Animations(\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  update: AnimationsType['update'],\n  render: AnimationsType['render']\n): AnimationsType {\n  const documentVisibleHandler = EventStore()\n  const timeStep = 1000 / 60\n  let lastTimeStamp: number | null = null\n  let lag = 0\n  let animationFrame = 0\n\n  function init(): void {\n    documentVisibleHandler.add(ownerDocument, 'visibilitychange', () => {\n      if (ownerDocument.hidden) reset()\n    })\n  }\n\n  function destroy(): void {\n    stop()\n    documentVisibleHandler.clear()\n  }\n\n  function animate(timeStamp: DOMHighResTimeStamp): void {\n    if (!animationFrame) return\n    if (!lastTimeStamp) lastTimeStamp = timeStamp\n\n    const elapsed = timeStamp - lastTimeStamp\n    lastTimeStamp = timeStamp\n    lag += elapsed\n\n    while (lag >= timeStep) {\n      update()\n      lag -= timeStep\n    }\n\n    const lagOffset = mathAbs(lag / timeStep)\n    render(lagOffset)\n\n    if (animationFrame) ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function start(): void {\n    if (animationFrame) return\n\n    animationFrame = ownerWindow.requestAnimationFrame(animate)\n  }\n\n  function stop(): void {\n    ownerWindow.cancelAnimationFrame(animationFrame)\n    lastTimeStamp = null\n    lag = 0\n    animationFrame = 0\n  }\n\n  function reset(): void {\n    lastTimeStamp = null\n    lag = 0\n  }\n\n  const self: AnimationsType = {\n    init,\n    destroy,\n    start,\n    stop,\n    update,\n    render\n  }\n  return self\n}\n","import { DirectionOptionType } from './Direction'\nimport { NodeRectType } from './NodeRects'\n\nexport type AxisOptionType = 'x' | 'y'\ntype AxisEdgeType = 'top' | 'right' | 'bottom' | 'left'\n\nexport type AxisType = {\n  scroll: AxisOptionType\n  cross: AxisOptionType\n  startEdge: AxisEdgeType\n  endEdge: AxisEdgeType\n  measureSize: (nodeRect: NodeRectType) => number\n}\n\nexport function Axis(\n  axis: AxisOptionType,\n  direction: DirectionOptionType\n): AxisType {\n  const scroll = axis === 'y' ? 'y' : 'x'\n  const cross = axis === 'y' ? 'x' : 'y'\n  const startEdge = getStartEdge()\n  const endEdge = getEndEdge()\n\n  function measureSize(nodeRect: NodeRectType): number {\n    const { width, height } = nodeRect\n    return scroll === 'x' ? width : height\n  }\n\n  function getStartEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'top'\n    return direction === 'rtl' ? 'right' : 'left'\n  }\n\n  function getEndEdge(): AxisEdgeType {\n    if (scroll === 'y') return 'bottom'\n    return direction === 'rtl' ? 'left' : 'right'\n  }\n\n  const self: AxisType = {\n    scroll,\n    cross,\n    startEdge,\n    endEdge,\n    measureSize\n  }\n  return self\n}\n","import { mathAbs } from './utils'\n\nexport type LimitType = {\n  min: number\n  max: number\n  length: number\n  constrain: (n: number) => number\n  reachedAny: (n: number) => boolean\n  reachedMax: (n: number) => boolean\n  reachedMin: (n: number) => boolean\n  removeOffset: (n: number) => number\n}\n\nexport function Limit(min: number = 0, max: number = 0): LimitType {\n  const length = mathAbs(min - max)\n\n  function reachedMin(n: number): boolean {\n    return n < min\n  }\n\n  function reachedMax(n: number): boolean {\n    return n > max\n  }\n\n  function reachedAny(n: number): boolean {\n    return reachedMin(n) || reachedMax(n)\n  }\n\n  function constrain(n: number): number {\n    if (!reachedAny(n)) return n\n    return reachedMin(n) ? min : max\n  }\n\n  function removeOffset(n: number): number {\n    if (!length) return n\n    return n - length * Math.ceil((n - max) / length)\n  }\n\n  const self: LimitType = {\n    length,\n    max,\n    min,\n    constrain,\n    reachedAny,\n    reachedMax,\n    reachedMin,\n    removeOffset\n  }\n  return self\n}\n","import { Limit } from './Limit'\nimport { mathAbs } from './utils'\n\nexport type CounterType = {\n  get: () => number\n  set: (n: number) => CounterType\n  add: (n: number) => CounterType\n  clone: () => CounterType\n}\n\nexport function Counter(\n  max: number,\n  start: number,\n  loop: boolean\n): CounterType {\n  const { constrain } = Limit(0, max)\n  const loopEnd = max + 1\n  let counter = withinLimit(start)\n\n  function withinLimit(n: number): number {\n    return !loop ? constrain(n) : mathAbs((loopEnd + n) % loopEnd)\n  }\n\n  function get(): number {\n    return counter\n  }\n\n  function set(n: number): CounterType {\n    counter = withinLimit(n)\n    return self\n  }\n\n  function add(n: number): CounterType {\n    return clone().set(get() + n)\n  }\n\n  function clone(): CounterType {\n    return Counter(max, get(), loop)\n  }\n\n  const self: CounterType = {\n    get,\n    set,\n    add,\n    clone\n  }\n  return self\n}\n","export type DirectionOptionType = 'ltr' | 'rtl'\n\nexport type DirectionType = {\n  apply: (n: number) => number\n}\n\nexport function Direction(direction: DirectionOptionType): DirectionType {\n  const sign = direction === 'rtl' ? -1 : 1\n\n  function apply(n: number): number {\n    return n * sign\n  }\n\n  const self: DirectionType = {\n    apply\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { DirectionType } from './Direction'\nimport { DragTrackerType, PointerEventType } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { AxisType } from './Axis'\nimport { EventStore } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType } from './ScrollTarget'\nimport { ScrollToType } from './ScrollTo'\nimport { Vector1DType } from './Vector1d'\nimport { PercentOfViewType } from './PercentOfView'\nimport { Limit } from './Limit'\nimport {\n  deltaAbs,\n  factorAbs,\n  isBoolean,\n  isMouseEvent,\n  mathAbs,\n  mathSign,\n  WindowType\n} from './utils'\n\ntype DragHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  evt: PointerEventType\n) => boolean | void\n\nexport type DragHandlerOptionType = boolean | DragHandlerCallbackType\n\nexport type DragHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n  pointerDown: () => boolean\n}\n\nexport function DragHandler(\n  axis: AxisType,\n  direction: DirectionType,\n  rootNode: HTMLElement,\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  target: Vector1DType,\n  dragTracker: DragTrackerType,\n  location: Vector1DType,\n  animation: AnimationsType,\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  index: CounterType,\n  eventHandler: EventHandlerType,\n  percentOfView: PercentOfViewType,\n  dragFree: boolean,\n  dragThreshold: number,\n  skipSnaps: boolean,\n  baseFriction: number,\n  watchDrag: DragHandlerOptionType\n): DragHandlerType {\n  const { cross: crossAxis } = axis\n  const focusNodes = ['INPUT', 'SELECT', 'TEXTAREA']\n  const nonPassiveEvent = { passive: false }\n  const initEvents = EventStore()\n  const dragEvents = EventStore()\n  const goToNextThreshold = Limit(50, 225).constrain(percentOfView.measure(20))\n  const snapForceBoost = { mouse: 300, touch: 400 }\n  const freeForceBoost = { mouse: 500, touch: 600 }\n  const baseSpeed = dragFree ? 43 : 25\n\n  let isMoving = false\n  let startScroll = 0\n  let startCross = 0\n  let pointerIsDown = false\n  let preventScroll = false\n  let preventClick = false\n  let isMouse = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchDrag) return\n\n    function downIfAllowed(evt: PointerEventType): void {\n      if (isBoolean(watchDrag) || watchDrag(emblaApi, evt)) down(evt)\n    }\n\n    const node = rootNode\n    initEvents\n      .add(node, 'dragstart', (evt) => evt.preventDefault(), nonPassiveEvent)\n      .add(node, 'touchmove', () => undefined, nonPassiveEvent)\n      .add(node, 'touchend', () => undefined)\n      .add(node, 'touchstart', downIfAllowed)\n      .add(node, 'mousedown', downIfAllowed)\n      .add(node, 'touchcancel', up)\n      .add(node, 'contextmenu', up)\n      .add(node, 'click', click, true)\n  }\n\n  function destroy(): void {\n    initEvents.clear()\n    dragEvents.clear()\n  }\n\n  function addDragEvents(): void {\n    const node = isMouse ? ownerDocument : rootNode\n    dragEvents\n      .add(node, 'touchmove', move, nonPassiveEvent)\n      .add(node, 'touchend', up)\n      .add(node, 'mousemove', move, nonPassiveEvent)\n      .add(node, 'mouseup', up)\n  }\n\n  function isFocusNode(node: Element): boolean {\n    const nodeName = node.nodeName || ''\n    return focusNodes.includes(nodeName)\n  }\n\n  function forceBoost(): number {\n    const boost = dragFree ? freeForceBoost : snapForceBoost\n    const type = isMouse ? 'mouse' : 'touch'\n    return boost[type]\n  }\n\n  function allowedForce(force: number, targetChanged: boolean): number {\n    const next = index.add(mathSign(force) * -1)\n    const baseForce = scrollTarget.byDistance(force, !dragFree).distance\n\n    if (dragFree || mathAbs(force) < goToNextThreshold) return baseForce\n    if (skipSnaps && targetChanged) return baseForce * 0.5\n\n    return scrollTarget.byIndex(next.get(), 0).distance\n  }\n\n  function down(evt: PointerEventType): void {\n    const isMouseEvt = isMouseEvent(evt, ownerWindow)\n    isMouse = isMouseEvt\n    if (isMouseEvt && evt.button !== 0) return\n    if (isFocusNode(evt.target as Element)) return\n\n    preventClick = dragFree && isMouseEvt && !evt.buttons && isMoving\n    isMoving = deltaAbs(target.get(), location.get()) >= 2\n\n    pointerIsDown = true\n    dragTracker.pointerDown(evt)\n    scrollBody.useFriction(0).useDuration(0)\n    target.set(location)\n    addDragEvents()\n    startScroll = dragTracker.readPoint(evt)\n    startCross = dragTracker.readPoint(evt, crossAxis)\n    eventHandler.emit('pointerDown')\n  }\n\n  function move(evt: PointerEventType): void {\n    const lastScroll = dragTracker.readPoint(evt)\n    const lastCross = dragTracker.readPoint(evt, crossAxis)\n    const diffScroll = deltaAbs(lastScroll, startScroll)\n    const diffCross = deltaAbs(lastCross, startCross)\n\n    if (!preventScroll && !isMouse) {\n      if (!evt.cancelable) return up(evt)\n      preventScroll = diffScroll > diffCross\n      if (!preventScroll) return up(evt)\n    }\n    const diff = dragTracker.pointerMove(evt)\n    if (diffScroll > dragThreshold) preventClick = true\n\n    scrollBody.useFriction(0.3).useDuration(1)\n    animation.start()\n    target.add(direction.apply(diff))\n    evt.preventDefault()\n  }\n\n  function up(evt: PointerEventType): void {\n    const currentLocation = scrollTarget.byDistance(0, false)\n    const targetChanged = currentLocation.index !== index.get()\n    const rawForce = dragTracker.pointerUp(evt) * forceBoost()\n    const force = allowedForce(direction.apply(rawForce), targetChanged)\n    const forceFactor = factorAbs(rawForce, force)\n    const speed = baseSpeed - 10 * forceFactor\n    const friction = baseFriction + forceFactor / 50\n\n    preventScroll = false\n    pointerIsDown = false\n    dragEvents.clear()\n    scrollBody.useDuration(speed).useFriction(friction)\n    scrollTo.distance(force, !dragFree)\n    isMouse = false\n    eventHandler.emit('pointerUp')\n  }\n\n  function click(evt: MouseEvent): void {\n    if (preventClick) {\n      evt.stopPropagation()\n      evt.preventDefault()\n    }\n  }\n\n  function pointerDown(): boolean {\n    return pointerIsDown\n  }\n\n  const self: DragHandlerType = {\n    init,\n    pointerDown,\n    destroy\n  }\n  return self\n}\n","import { AxisOptionType, AxisType } from './Axis'\nimport { isMouseEvent, mathAbs, WindowType } from './utils'\n\ntype PointerCoordType = keyof Touch | keyof MouseEvent\nexport type PointerEventType = TouchEvent | MouseEvent\n\nexport type DragTrackerType = {\n  pointerDown: (evt: PointerEventType) => number\n  pointerMove: (evt: PointerEventType) => number\n  pointerUp: (evt: PointerEventType) => number\n  readPoint: (evt: PointerEventType, evtAxis?: AxisOptionType) => number\n}\n\nexport function DragTracker(\n  axis: AxisType,\n  ownerWindow: WindowType\n): DragTrackerType {\n  const logInterval = 170\n\n  let startEvent: PointerEventType\n  let lastEvent: PointerEventType\n\n  function readTime(evt: PointerEventType): number {\n    return evt.timeStamp\n  }\n\n  function readPoint(evt: PointerEventType, evtAxis?: AxisOptionType): number {\n    const property = evtAxis || axis.scroll\n    const coord: PointerCoordType = `client${property === 'x' ? 'X' : 'Y'}`\n    return (isMouseEvent(evt, ownerWindow) ? evt : evt.touches[0])[coord]\n  }\n\n  function pointerDown(evt: PointerEventType): number {\n    startEvent = evt\n    lastEvent = evt\n    return readPoint(evt)\n  }\n\n  function pointerMove(evt: PointerEventType): number {\n    const diff = readPoint(evt) - readPoint(lastEvent)\n    const expired = readTime(evt) - readTime(startEvent) > logInterval\n\n    lastEvent = evt\n    if (expired) startEvent = evt\n    return diff\n  }\n\n  function pointerUp(evt: PointerEventType): number {\n    if (!startEvent || !lastEvent) return 0\n    const diffDrag = readPoint(lastEvent) - readPoint(startEvent)\n    const diffTime = readTime(evt) - readTime(startEvent)\n    const expired = readTime(evt) - readTime(lastEvent) > logInterval\n    const force = diffDrag / diffTime\n    const isFlick = diffTime && !expired && mathAbs(force) > 0.1\n\n    return isFlick ? force : 0\n  }\n\n  const self: DragTrackerType = {\n    pointerDown,\n    pointerMove,\n    pointerUp,\n    readPoint\n  }\n  return self\n}\n","export type NodeRectType = {\n  top: number\n  right: number\n  bottom: number\n  left: number\n  width: number\n  height: number\n}\n\nexport type NodeRectsType = {\n  measure: (node: HTMLElement) => NodeRectType\n}\n\nexport function NodeRects(): NodeRectsType {\n  function measure(node: HTMLElement): NodeRectType {\n    const { offsetTop, offsetLeft, offsetWidth, offsetHeight } = node\n    const offset: NodeRectType = {\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      left: offsetLeft,\n      width: offsetWidth,\n      height: offsetHeight\n    }\n\n    return offset\n  }\n\n  const self: NodeRectsType = {\n    measure\n  }\n  return self\n}\n","export type PercentOfViewType = {\n  measure: (n: number) => number\n}\n\nexport function PercentOfView(viewSize: number): PercentOfViewType {\n  function measure(n: number): number {\n    return viewSize * (n / 100)\n  }\n\n  const self: PercentOfViewType = {\n    measure\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { NodeRectsType } from './NodeRects'\nimport { isBoolean, mathAbs, WindowType } from './utils'\n\ntype ResizeHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  entries: ResizeObserverEntry[]\n) => boolean | void\n\nexport type ResizeHandlerOptionType = boolean | ResizeHandlerCallbackType\n\nexport type ResizeHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function ResizeHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  ownerWindow: WindowType,\n  slides: HTMLElement[],\n  axis: AxisType,\n  watchResize: ResizeHandlerOptionType,\n  nodeRects: NodeRectsType\n): ResizeHandlerType {\n  let resizeObserver: ResizeObserver\n  let containerSize: number\n  let slideSizes: number[] = []\n  let destroyed = false\n\n  function readSize(node: HTMLElement): number {\n    return axis.measureSize(nodeRects.measure(node))\n  }\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchResize) return\n\n    containerSize = readSize(container)\n    slideSizes = slides.map(readSize)\n\n    function defaultCallback(entries: ResizeObserverEntry[]): void {\n      for (const entry of entries) {\n        const isContainer = entry.target === container\n        const slideIndex = slides.indexOf(<HTMLElement>entry.target)\n        const lastSize = isContainer ? containerSize : slideSizes[slideIndex]\n        const newSize = readSize(isContainer ? container : slides[slideIndex])\n        const diffSize = mathAbs(newSize - lastSize)\n\n        if (diffSize >= 0.5) {\n          ownerWindow.requestAnimationFrame(() => {\n            emblaApi.reInit()\n            eventHandler.emit('resize')\n          })\n          break\n        }\n      }\n    }\n\n    resizeObserver = new ResizeObserver((entries) => {\n      if (destroyed) return\n      if (isBoolean(watchResize) || watchResize(emblaApi, entries)) {\n        defaultCallback(entries)\n      }\n    })\n\n    const observeNodes = [container].concat(slides)\n    observeNodes.forEach((node) => resizeObserver.observe(node))\n  }\n\n  function destroy(): void {\n    if (resizeObserver) resizeObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: ResizeHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { mathSign, mathAbs } from './utils'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollBodyType = {\n  direction: () => number\n  duration: () => number\n  velocity: () => number\n  seek: () => ScrollBodyType\n  settled: () => boolean\n  useBaseFriction: () => ScrollBodyType\n  useBaseDuration: () => ScrollBodyType\n  useFriction: (n: number) => ScrollBodyType\n  useDuration: (n: number) => ScrollBodyType\n}\n\nexport function ScrollBody(\n  location: Vector1DType,\n  offsetLocation: Vector1DType,\n  target: Vector1DType,\n  baseDuration: number,\n  baseFriction: number\n): ScrollBodyType {\n  let bodyVelocity = 0\n  let scrollDirection = 0\n  let scrollDuration = baseDuration\n  let scrollFriction = baseFriction\n  let rawLocation = location.get()\n  let rawLocationPrevious = 0\n\n  function seek(): ScrollBodyType {\n    const diff = target.get() - location.get()\n    const isInstant = !scrollDuration\n    let directionDiff = 0\n\n    if (isInstant) {\n      bodyVelocity = 0\n      location.set(target)\n\n      directionDiff = diff\n    } else {\n      bodyVelocity += diff / scrollDuration\n      bodyVelocity *= scrollFriction\n      rawLocation += bodyVelocity\n      location.add(bodyVelocity)\n\n      directionDiff = rawLocation - rawLocationPrevious\n    }\n\n    scrollDirection = mathSign(directionDiff)\n    rawLocationPrevious = rawLocation\n    return self\n  }\n\n  function settled(): boolean {\n    const diff = target.get() - offsetLocation.get()\n    return mathAbs(diff) < 0.001\n  }\n\n  function duration(): number {\n    return scrollDuration\n  }\n\n  function direction(): number {\n    return scrollDirection\n  }\n\n  function velocity(): number {\n    return bodyVelocity\n  }\n\n  function useBaseDuration(): ScrollBodyType {\n    return useDuration(baseDuration)\n  }\n\n  function useBaseFriction(): ScrollBodyType {\n    return useFriction(baseFriction)\n  }\n\n  function useDuration(n: number): ScrollBodyType {\n    scrollDuration = n\n    return self\n  }\n\n  function useFriction(n: number): ScrollBodyType {\n    scrollFriction = n\n    return self\n  }\n\n  const self: ScrollBodyType = {\n    direction,\n    duration,\n    velocity,\n    seek,\n    settled,\n    useBaseFriction,\n    useBaseDuration,\n    useFriction,\n    useDuration\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { ScrollBodyType } from './ScrollBody'\nimport { Vector1DType } from './Vector1d'\nimport { mathAbs } from './utils'\nimport { PercentOfViewType } from './PercentOfView'\n\nexport type ScrollBoundsType = {\n  constrain: (pointerDown: boolean) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function ScrollBounds(\n  limit: LimitType,\n  offsetLocation: Vector1DType,\n  target: Vector1DType,\n  scrollBody: ScrollBodyType,\n  percentOfView: PercentOfViewType\n): ScrollBoundsType {\n  const pullBackThreshold = percentOfView.measure(10)\n  const edgeOffsetTolerance = percentOfView.measure(50)\n  const frictionLimit = Limit(0.1, 0.99)\n  let disabled = false\n\n  function shouldConstrain(): boolean {\n    if (disabled) return false\n    if (!limit.reachedAny(target.get())) return false\n    if (!limit.reachedAny(offsetLocation.get())) return false\n    return true\n  }\n\n  function constrain(pointerDown: boolean): void {\n    if (!shouldConstrain()) return\n    const edge = limit.reachedMin(offsetLocation.get()) ? 'min' : 'max'\n    const diffToEdge = mathAbs(limit[edge] - offsetLocation.get())\n    const diffToTarget = target.get() - offsetLocation.get()\n    const friction = frictionLimit.constrain(diffToEdge / edgeOffsetTolerance)\n\n    target.subtract(diffToTarget * friction)\n\n    if (!pointerDown && mathAbs(diffToTarget) < pullBackThreshold) {\n      target.set(limit.constrain(target.get()))\n      scrollBody.useDuration(25).useBaseFriction()\n    }\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  const self: ScrollBoundsType = {\n    constrain,\n    toggleActive\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayIsLastIndex, arrayLast, deltaAbs } from './utils'\n\nexport type ScrollContainOptionType = false | 'trimSnaps' | 'keepSnaps'\n\nexport type ScrollContainType = {\n  snapsContained: number[]\n  scrollContainLimit: LimitType\n}\n\nexport function ScrollContain(\n  viewSize: number,\n  contentSize: number,\n  snapsAligned: number[],\n  containScroll: ScrollContainOptionType,\n  pixelTolerance: number\n): ScrollContainType {\n  const scrollBounds = Limit(-contentSize + viewSize, 0)\n  const snapsBounded = measureBounded()\n  const scrollContainLimit = findScrollContainLimit()\n  const snapsContained = measureContained()\n\n  function usePixelTolerance(bound: number, snap: number): boolean {\n    return deltaAbs(bound, snap) < 1\n  }\n\n  function findScrollContainLimit(): LimitType {\n    const startSnap = snapsBounded[0]\n    const endSnap = arrayLast(snapsBounded)\n    const min = snapsBounded.lastIndexOf(startSnap)\n    const max = snapsBounded.indexOf(endSnap) + 1\n    return Limit(min, max)\n  }\n\n  function measureBounded(): number[] {\n    return snapsAligned\n      .map((snapAligned, index) => {\n        const { min, max } = scrollBounds\n        const snap = scrollBounds.constrain(snapAligned)\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(snapsAligned, index)\n        if (isFirst) return max\n        if (isLast) return min\n        if (usePixelTolerance(min, snap)) return min\n        if (usePixelTolerance(max, snap)) return max\n        return snap\n      })\n      .map((scrollBound) => parseFloat(scrollBound.toFixed(3)))\n  }\n\n  function measureContained(): number[] {\n    if (contentSize <= viewSize + pixelTolerance) return [scrollBounds.max]\n    if (containScroll === 'keepSnaps') return snapsBounded\n    const { min, max } = scrollContainLimit\n    return snapsBounded.slice(min, max)\n  }\n\n  const self: ScrollContainType = {\n    snapsContained,\n    scrollContainLimit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { arrayLast } from './utils'\n\nexport type ScrollLimitType = {\n  limit: LimitType\n}\n\nexport function ScrollLimit(\n  contentSize: number,\n  scrollSnaps: number[],\n  loop: boolean\n): ScrollLimitType {\n  const max = scrollSnaps[0]\n  const min = loop ? max - contentSize : arrayLast(scrollSnaps)\n  const limit = Limit(min, max)\n\n  const self: ScrollLimitType = {\n    limit\n  }\n  return self\n}\n","import { Limit, LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollLooperType = {\n  loop: (direction: number) => void\n}\n\nexport function ScrollLooper(\n  contentSize: number,\n  limit: LimitType,\n  offsetLocation: Vector1DType,\n  vectors: Vector1DType[]\n): ScrollLooperType {\n  const jointSafety = 0.1\n  const min = limit.min + jointSafety\n  const max = limit.max + jointSafety\n  const { reachedMin, reachedMax } = Limit(min, max)\n\n  function shouldLoop(direction: number): boolean {\n    if (direction === 1) return reachedMax(offsetLocation.get())\n    if (direction === -1) return reachedMin(offsetLocation.get())\n    return false\n  }\n\n  function loop(direction: number): void {\n    if (!shouldLoop(direction)) return\n\n    const loopDistance = contentSize * (direction * -1)\n    vectors.forEach((v) => v.add(loopDistance))\n  }\n\n  const self: ScrollLooperType = {\n    loop\n  }\n  return self\n}\n","import { LimitType } from './Limit'\n\nexport type ScrollProgressType = {\n  get: (n: number) => number\n}\n\nexport function ScrollProgress(limit: LimitType): ScrollProgressType {\n  const { max, length } = limit\n\n  function get(n: number): number {\n    const currentLocation = n - max\n    return length ? currentLocation / -length : 0\n  }\n\n  const self: ScrollProgressType = {\n    get\n  }\n  return self\n}\n","import { AlignmentType } from './Alignment'\nimport { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport { arrayLast, mathAbs } from './utils'\n\nexport type ScrollSnapsType = {\n  snaps: number[]\n  snapsAligned: number[]\n}\n\nexport function ScrollSnaps(\n  axis: AxisType,\n  alignment: AlignmentType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slidesToScroll: SlidesToScrollType\n): ScrollSnapsType {\n  const { startEdge, endEdge } = axis\n  const { groupSlides } = slidesToScroll\n  const alignments = measureSizes().map(alignment.measure)\n  const snaps = measureUnaligned()\n  const snapsAligned = measureAligned()\n\n  function measureSizes(): number[] {\n    return groupSlides(slideRects)\n      .map((rects) => arrayLast(rects)[endEdge] - rects[0][startEdge])\n      .map(mathAbs)\n  }\n\n  function measureUnaligned(): number[] {\n    return slideRects\n      .map((rect) => containerRect[startEdge] - rect[startEdge])\n      .map((snap) => -mathAbs(snap))\n  }\n\n  function measureAligned(): number[] {\n    return groupSlides(snaps)\n      .map((g) => g[0])\n      .map((snap, index) => snap + alignments[index])\n  }\n\n  const self: ScrollSnapsType = {\n    snaps,\n    snapsAligned\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { SlidesToScrollType } from './SlidesToScroll'\nimport {\n  arrayFromNumber,\n  arrayIsLastIndex,\n  arrayLast,\n  arrayLastIndex\n} from './utils'\n\nexport type SlideRegistryType = {\n  slideRegistry: number[][]\n}\n\nexport function SlideRegistry(\n  containSnaps: boolean,\n  containScroll: ScrollContainOptionType,\n  scrollSnaps: number[],\n  scrollContainLimit: LimitType,\n  slidesToScroll: SlidesToScrollType,\n  slideIndexes: number[]\n): SlideRegistryType {\n  const { groupSlides } = slidesToScroll\n  const { min, max } = scrollContainLimit\n  const slideRegistry = createSlideRegistry()\n\n  function createSlideRegistry(): number[][] {\n    const groupedSlideIndexes = groupSlides(slideIndexes)\n    const doNotContain = !containSnaps || containScroll === 'keepSnaps'\n\n    if (scrollSnaps.length === 1) return [slideIndexes]\n    if (doNotContain) return groupedSlideIndexes\n\n    return groupedSlideIndexes.slice(min, max).map((group, index, groups) => {\n      const isFirst = !index\n      const isLast = arrayIsLastIndex(groups, index)\n\n      if (isFirst) {\n        const range = arrayLast(groups[0]) + 1\n        return arrayFromNumber(range)\n      }\n      if (isLast) {\n        const range = arrayLastIndex(slideIndexes) - arrayLast(groups)[0] + 1\n        return arrayFromNumber(range, arrayLast(groups)[0])\n      }\n      return group\n    })\n  }\n\n  const self: SlideRegistryType = {\n    slideRegistry\n  }\n  return self\n}\n","import { LimitType } from './Limit'\nimport { Vector1DType } from './Vector1d'\nimport { arrayLast, mathAbs, mathSign } from './utils'\n\nexport type TargetType = {\n  distance: number\n  index: number\n}\n\nexport type ScrollTargetType = {\n  byIndex: (target: number, direction: number) => TargetType\n  byDistance: (force: number, snap: boolean) => TargetType\n  shortcut: (target: number, direction: number) => number\n}\n\nexport function ScrollTarget(\n  loop: boolean,\n  scrollSnaps: number[],\n  contentSize: number,\n  limit: LimitType,\n  targetVector: Vector1DType\n): ScrollTargetType {\n  const { reachedAny, removeOffset, constrain } = limit\n\n  function minDistance(distances: number[]): number {\n    return distances.concat().sort((a, b) => mathAbs(a) - mathAbs(b))[0]\n  }\n\n  function findTargetSnap(target: number): TargetType {\n    const distance = loop ? removeOffset(target) : constrain(target)\n    const ascDiffsToSnaps = scrollSnaps\n      .map((scrollSnap) => scrollSnap - distance)\n      .map((diffToSnap) => shortcut(diffToSnap, 0))\n      .map((diff, i) => ({ diff, index: i }))\n      .sort((d1, d2) => mathAbs(d1.diff) - mathAbs(d2.diff))\n\n    const { index } = ascDiffsToSnaps[0]\n    return { index, distance }\n  }\n\n  function shortcut(target: number, direction: number): number {\n    const targets = [target, target + contentSize, target - contentSize]\n\n    if (!loop) return targets[0]\n    if (!direction) return minDistance(targets)\n\n    const matchingTargets = targets.filter((t) => mathSign(t) === direction)\n    if (matchingTargets.length) return minDistance(matchingTargets)\n    return arrayLast(targets) - contentSize\n  }\n\n  function byIndex(index: number, direction: number): TargetType {\n    const diffToSnap = scrollSnaps[index] - targetVector.get()\n    const distance = shortcut(diffToSnap, direction)\n    return { index, distance }\n  }\n\n  function byDistance(distance: number, snap: boolean): TargetType {\n    const target = targetVector.get() + distance\n    const { index, distance: targetSnapDistance } = findTargetSnap(target)\n    const reachedBound = !loop && reachedAny(target)\n\n    if (!snap || reachedBound) return { index, distance }\n\n    const diffToSnap = scrollSnaps[index] - targetSnapDistance\n    const snapDistance = distance + shortcut(diffToSnap, 0)\n\n    return { index, distance: snapDistance }\n  }\n\n  const self: ScrollTargetType = {\n    byDistance,\n    byIndex,\n    shortcut\n  }\n  return self\n}\n","import { AnimationsType } from './Animations'\nimport { CounterType } from './Counter'\nimport { EventHandlerType } from './EventHandler'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollTargetType, TargetType } from './ScrollTarget'\nimport { Vector1DType } from './Vector1d'\n\nexport type ScrollToType = {\n  distance: (n: number, snap: boolean) => void\n  index: (n: number, direction: number) => void\n}\n\nexport function ScrollTo(\n  animation: AnimationsType,\n  indexCurrent: CounterType,\n  indexPrevious: CounterType,\n  scrollBody: ScrollBodyType,\n  scrollTarget: ScrollTargetType,\n  targetVector: Vector1DType,\n  eventHandler: EventHandlerType\n): ScrollToType {\n  function scrollTo(target: TargetType): void {\n    const distanceDiff = target.distance\n    const indexDiff = target.index !== indexCurrent.get()\n\n    targetVector.add(distanceDiff)\n\n    if (distanceDiff) {\n      if (scrollBody.duration()) {\n        animation.start()\n      } else {\n        animation.update()\n        animation.render(1)\n        animation.update()\n      }\n    }\n\n    if (indexDiff) {\n      indexPrevious.set(indexCurrent.get())\n      indexCurrent.set(target.index)\n      eventHandler.emit('select')\n    }\n  }\n\n  function distance(n: number, snap: boolean): void {\n    const target = scrollTarget.byDistance(n, snap)\n    scrollTo(target)\n  }\n\n  function index(n: number, direction: number): void {\n    const targetIndex = indexCurrent.clone().set(n)\n    const target = scrollTarget.byIndex(targetIndex.get(), direction)\n    scrollTo(target)\n  }\n\n  const self: ScrollToType = {\n    distance,\n    index\n  }\n  return self\n}\n","import { EventStoreType } from './EventStore'\nimport { ScrollBodyType } from './ScrollBody'\nimport { ScrollToType } from './ScrollTo'\nimport { SlideRegistryType } from './SlideRegistry'\nimport { isNumber } from './utils'\n\nexport type SlideFocusType = {\n  init: () => void\n}\n\nexport function SlideFocus(\n  root: HTMLElement,\n  slides: HTMLElement[],\n  slideRegistry: SlideRegistryType['slideRegistry'],\n  scrollTo: ScrollToType,\n  scrollBody: ScrollBodyType,\n  eventStore: EventStoreType\n): SlideFocusType {\n  let lastTabPressTime = 0\n\n  function init(): void {\n    eventStore.add(document, 'keydown', registerTabPress, false)\n    slides.forEach(addSlideFocusEvent)\n  }\n\n  function registerTabPress(event: KeyboardEvent): void {\n    if (event.code === 'Tab') lastTabPressTime = new Date().getTime()\n  }\n\n  function addSlideFocusEvent(slide: HTMLElement): void {\n    const focus = (): void => {\n      const nowTime = new Date().getTime()\n      const diffTime = nowTime - lastTabPressTime\n\n      if (diffTime > 10) return\n\n      root.scrollLeft = 0\n      const index = slides.indexOf(slide)\n      const group = slideRegistry.findIndex((group) => group.includes(index))\n\n      if (!isNumber(group)) return\n\n      scrollBody.useDuration(0)\n      scrollTo.index(group, 0)\n    }\n\n    eventStore.add(slide, 'focus', focus, {\n      passive: true,\n      capture: true\n    })\n  }\n\n  const self: SlideFocusType = {\n    init\n  }\n  return self\n}\n","import { isNumber } from './utils'\n\nexport type Vector1DType = {\n  get: () => number\n  set: (n: Vector1DType | number) => void\n  add: (n: Vector1DType | number) => void\n  subtract: (n: Vector1DType | number) => void\n}\n\nexport function Vector1D(initialValue: number): Vector1DType {\n  let value = initialValue\n\n  function get(): number {\n    return value\n  }\n\n  function set(n: Vector1DType | number): void {\n    value = normalizeInput(n)\n  }\n\n  function add(n: Vector1DType | number): void {\n    value += normalizeInput(n)\n  }\n\n  function subtract(n: Vector1DType | number): void {\n    value -= normalizeInput(n)\n  }\n\n  function normalizeInput(n: Vector1DType | number): number {\n    return isNumber(n) ? n : n.get()\n  }\n\n  const self: Vector1DType = {\n    get,\n    set,\n    add,\n    subtract\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\n\nexport type TranslateType = {\n  clear: () => void\n  to: (target: number) => void\n  toggleActive: (active: boolean) => void\n}\n\nexport function Translate(\n  axis: AxisType,\n  direction: DirectionType,\n  container: HTMLElement\n): TranslateType {\n  const translate = axis.scroll === 'x' ? x : y\n  const containerStyle = container.style\n  let disabled = false\n\n  function x(n: number): string {\n    return `translate3d(${n}px,0px,0px)`\n  }\n\n  function y(n: number): string {\n    return `translate3d(0px,${n}px,0px)`\n  }\n\n  function to(target: number): void {\n    if (disabled) return\n    containerStyle.transform = translate(direction.apply(target))\n  }\n\n  function toggleActive(active: boolean): void {\n    disabled = !active\n  }\n\n  function clear(): void {\n    if (disabled) return\n    containerStyle.transform = ''\n    if (!container.getAttribute('style')) container.removeAttribute('style')\n  }\n\n  const self: TranslateType = {\n    clear,\n    to,\n    toggleActive\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { arrayKeys } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\nimport { Translate, TranslateType } from './Translate'\nimport { DirectionType } from './Direction'\n\ntype SlideBoundType = {\n  start: number\n  end: number\n}\n\ntype LoopPointType = {\n  loopPoint: number\n  index: number\n  translate: TranslateType\n  slideLocation: Vector1DType\n  target: () => number\n}\n\nexport type SlideLooperType = {\n  canLoop: () => boolean\n  clear: () => void\n  loop: () => void\n  loopPoints: LoopPointType[]\n}\n\nexport function SlideLooper(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  contentSize: number,\n  slideSizes: number[],\n  slideSizesWithGaps: number[],\n  snaps: number[],\n  scrollSnaps: number[],\n  offsetLocation: Vector1DType,\n  slides: HTMLElement[]\n): SlideLooperType {\n  const roundingSafety = 0.5\n  const ascItems = arrayKeys(slideSizesWithGaps)\n  const descItems = arrayKeys(slideSizesWithGaps).reverse()\n  const loopPoints = startPoints().concat(endPoints())\n\n  function removeSlideSizes(indexes: number[], from: number): number {\n    return indexes.reduce((a: number, i) => {\n      return a - slideSizesWithGaps[i]\n    }, from)\n  }\n\n  function slidesInGap(indexes: number[], gap: number): number[] {\n    return indexes.reduce((a: number[], i) => {\n      const remainingGap = removeSlideSizes(a, gap)\n      return remainingGap > 0 ? a.concat([i]) : a\n    }, [])\n  }\n\n  function findSlideBounds(offset: number): SlideBoundType[] {\n    return snaps.map((snap, index) => ({\n      start: snap - slideSizes[index] + roundingSafety + offset,\n      end: snap + viewSize - roundingSafety + offset\n    }))\n  }\n\n  function findLoopPoints(\n    indexes: number[],\n    offset: number,\n    isEndEdge: boolean\n  ): LoopPointType[] {\n    const slideBounds = findSlideBounds(offset)\n\n    return indexes.map((index) => {\n      const initial = isEndEdge ? 0 : -contentSize\n      const altered = isEndEdge ? contentSize : 0\n      const boundEdge = isEndEdge ? 'end' : 'start'\n      const loopPoint = slideBounds[index][boundEdge]\n\n      return {\n        index,\n        loopPoint,\n        slideLocation: Vector1D(-1),\n        translate: Translate(axis, direction, slides[index]),\n        target: () => (offsetLocation.get() > loopPoint ? initial : altered)\n      }\n    })\n  }\n\n  function startPoints(): LoopPointType[] {\n    const gap = scrollSnaps[0]\n    const indexes = slidesInGap(descItems, gap)\n    return findLoopPoints(indexes, contentSize, false)\n  }\n\n  function endPoints(): LoopPointType[] {\n    const gap = viewSize - scrollSnaps[0] - 1\n    const indexes = slidesInGap(ascItems, gap)\n    return findLoopPoints(indexes, -contentSize, true)\n  }\n\n  function canLoop(): boolean {\n    return loopPoints.every(({ index }) => {\n      const otherIndexes = ascItems.filter((i) => i !== index)\n      return removeSlideSizes(otherIndexes, viewSize) <= 0.1\n    })\n  }\n\n  function loop(): void {\n    loopPoints.forEach((loopPoint) => {\n      const { target, translate, slideLocation } = loopPoint\n      const shiftLocation = target()\n      if (shiftLocation === slideLocation.get()) return\n      translate.to(shiftLocation)\n      slideLocation.set(shiftLocation)\n    })\n  }\n\n  function clear(): void {\n    loopPoints.forEach((loopPoint) => loopPoint.translate.clear())\n  }\n\n  const self: SlideLooperType = {\n    canLoop,\n    clear,\n    loop,\n    loopPoints\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { EventHandlerType } from './EventHandler'\nimport { isBoolean } from './utils'\n\ntype SlidesHandlerCallbackType = (\n  emblaApi: EmblaCarouselType,\n  mutations: MutationRecord[]\n) => boolean | void\n\nexport type SlidesHandlerOptionType = boolean | SlidesHandlerCallbackType\n\nexport type SlidesHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  destroy: () => void\n}\n\nexport function SlidesHandler(\n  container: HTMLElement,\n  eventHandler: EventHandlerType,\n  watchSlides: SlidesHandlerOptionType\n): SlidesHandlerType {\n  let mutationObserver: MutationObserver\n  let destroyed = false\n\n  function init(emblaApi: EmblaCarouselType): void {\n    if (!watchSlides) return\n\n    function defaultCallback(mutations: MutationRecord[]): void {\n      for (const mutation of mutations) {\n        if (mutation.type === 'childList') {\n          emblaApi.reInit()\n          eventHandler.emit('slidesChanged')\n          break\n        }\n      }\n    }\n\n    mutationObserver = new MutationObserver((mutations) => {\n      if (destroyed) return\n      if (isBoolean(watchSlides) || watchSlides(emblaApi, mutations)) {\n        defaultCallback(mutations)\n      }\n    })\n\n    mutationObserver.observe(container, { childList: true })\n  }\n\n  function destroy(): void {\n    if (mutationObserver) mutationObserver.disconnect()\n    destroyed = true\n  }\n\n  const self: SlidesHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { EventHandlerType } from './EventHandler'\nimport { objectKeys } from './utils'\n\ntype IntersectionEntryMapType = {\n  [key: number]: IntersectionObserverEntry\n}\n\nexport type SlidesInViewOptionsType = IntersectionObserverInit['threshold']\n\nexport type SlidesInViewType = {\n  init: () => void\n  destroy: () => void\n  get: (inView?: boolean) => number[]\n}\n\nexport function SlidesInView(\n  container: HTMLElement,\n  slides: HTMLElement[],\n  eventHandler: EventHandlerType,\n  threshold: SlidesInViewOptionsType\n): SlidesInViewType {\n  const intersectionEntryMap: IntersectionEntryMapType = {}\n  let inViewCache: number[] | null = null\n  let notInViewCache: number[] | null = null\n  let intersectionObserver: IntersectionObserver\n  let destroyed = false\n\n  function init(): void {\n    intersectionObserver = new IntersectionObserver(\n      (entries) => {\n        if (destroyed) return\n\n        entries.forEach((entry) => {\n          const index = slides.indexOf(<HTMLElement>entry.target)\n          intersectionEntryMap[index] = entry\n        })\n\n        inViewCache = null\n        notInViewCache = null\n        eventHandler.emit('slidesInView')\n      },\n      {\n        root: container.parentElement,\n        threshold\n      }\n    )\n\n    slides.forEach((slide) => intersectionObserver.observe(slide))\n  }\n\n  function destroy(): void {\n    if (intersectionObserver) intersectionObserver.disconnect()\n    destroyed = true\n  }\n\n  function createInViewList(inView: boolean): number[] {\n    return objectKeys(intersectionEntryMap).reduce(\n      (list: number[], slideIndex) => {\n        const index = parseInt(slideIndex)\n        const { isIntersecting } = intersectionEntryMap[index]\n        const inViewMatch = inView && isIntersecting\n        const notInViewMatch = !inView && !isIntersecting\n\n        if (inViewMatch || notInViewMatch) list.push(index)\n        return list\n      },\n      []\n    )\n  }\n\n  function get(inView: boolean = true): number[] {\n    if (inView && inViewCache) return inViewCache\n    if (!inView && notInViewCache) return notInViewCache\n\n    const slideIndexes = createInViewList(inView)\n\n    if (inView) inViewCache = slideIndexes\n    if (!inView) notInViewCache = slideIndexes\n\n    return slideIndexes\n  }\n\n  const self: SlidesInViewType = {\n    init,\n    destroy,\n    get\n  }\n\n  return self\n}\n","import { AxisType } from './Axis'\nimport { NodeRectType } from './NodeRects'\nimport { arrayIsLastIndex, arrayLast, mathAbs, WindowType } from './utils'\n\nexport type SlideSizesType = {\n  slideSizes: number[]\n  slideSizesWithGaps: number[]\n  startGap: number\n  endGap: number\n}\n\nexport function SlideSizes(\n  axis: AxisType,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  slides: HTMLElement[],\n  readEdgeGap: boolean,\n  ownerWindow: WindowType\n): SlideSizesType {\n  const { measureSize, startEdge, endEdge } = axis\n  const withEdgeGap = slideRects[0] && readEdgeGap\n  const startGap = measureStartGap()\n  const endGap = measureEndGap()\n  const slideSizes = slideRects.map(measureSize)\n  const slideSizesWithGaps = measureWithGaps()\n\n  function measureStartGap(): number {\n    if (!withEdgeGap) return 0\n    const slideRect = slideRects[0]\n    return mathAbs(containerRect[startEdge] - slideRect[startEdge])\n  }\n\n  function measureEndGap(): number {\n    if (!withEdgeGap) return 0\n    const style = ownerWindow.getComputedStyle(arrayLast(slides))\n    return parseFloat(style.getPropertyValue(`margin-${endEdge}`))\n  }\n\n  function measureWithGaps(): number[] {\n    return slideRects\n      .map((rect, index, rects) => {\n        const isFirst = !index\n        const isLast = arrayIsLastIndex(rects, index)\n        if (isFirst) return slideSizes[index] + startGap\n        if (isLast) return slideSizes[index] + endGap\n        return rects[index + 1][startEdge] - rect[startEdge]\n      })\n      .map(mathAbs)\n  }\n\n  const self: SlideSizesType = {\n    slideSizes,\n    slideSizesWithGaps,\n    startGap,\n    endGap\n  }\n  return self\n}\n","import { AxisType } from './Axis'\nimport { DirectionType } from './Direction'\nimport { NodeRectType } from './NodeRects'\nimport {\n  arrayKeys,\n  arrayLast,\n  arrayLastIndex,\n  isNumber,\n  mathAbs\n} from './utils'\n\nexport type SlidesToScrollOptionType = 'auto' | number\n\nexport type SlidesToScrollType = {\n  groupSlides: <Type>(array: Type[]) => Type[][]\n}\n\nexport function SlidesToScroll(\n  axis: AxisType,\n  direction: DirectionType,\n  viewSize: number,\n  slidesToScroll: SlidesToScrollOptionType,\n  loop: boolean,\n  containerRect: NodeRectType,\n  slideRects: NodeRectType[],\n  startGap: number,\n  endGap: number,\n  pixelTolerance: number\n): SlidesToScrollType {\n  const { startEdge, endEdge } = axis\n  const groupByNumber = isNumber(slidesToScroll)\n\n  function byNumber<Type>(array: Type[], groupSize: number): Type[][] {\n    return arrayKeys(array)\n      .filter((i) => i % groupSize === 0)\n      .map((i) => array.slice(i, i + groupSize))\n  }\n\n  function bySize<Type>(array: Type[]): Type[][] {\n    if (!array.length) return []\n\n    return arrayKeys(array)\n      .reduce((groups: number[], rectB) => {\n        const rectA = arrayLast(groups) || 0\n        const isFirst = rectA === 0\n        const isLast = rectB === arrayLastIndex(array)\n\n        const edgeA = containerRect[startEdge] - slideRects[rectA][startEdge]\n        const edgeB = containerRect[startEdge] - slideRects[rectB][endEdge]\n        const gapA = !loop && isFirst ? direction.apply(startGap) : 0\n        const gapB = !loop && isLast ? direction.apply(endGap) : 0\n        const chunkSize = mathAbs(edgeB - gapB - (edgeA + gapA))\n\n        if (chunkSize > viewSize + pixelTolerance) groups.push(rectB)\n        if (isLast) groups.push(array.length)\n        return groups\n      }, [])\n      .map((currentSize, index, groups) => {\n        const previousSize = Math.max(groups[index - 1] || 0)\n        return array.slice(previousSize, currentSize)\n      })\n  }\n\n  function groupSlides<Type>(array: Type[]): Type[][] {\n    return groupByNumber ? byNumber(array, slidesToScroll) : bySize(array)\n  }\n\n  const self: SlidesToScrollType = {\n    groupSlides\n  }\n  return self\n}\n","import { Alignment } from './Alignment'\nimport {\n  Animations,\n  AnimationsType,\n  AnimationsUpdateType,\n  AnimationsRenderType\n} from './Animations'\nimport { Axis, AxisType } from './Axis'\nimport { Counter, CounterType } from './Counter'\nimport { Direction, DirectionType } from './Direction'\nimport { DragHandler, DragHandlerType } from './DragHandler'\nimport { DragTracker } from './DragTracker'\nimport { EventHandlerType } from './EventHandler'\nimport { EventStore, EventStoreType } from './EventStore'\nimport { LimitType } from './Limit'\nimport { NodeRectType, NodeRects } from './NodeRects'\nimport { OptionsType } from './Options'\nimport { PercentOfView, PercentOfViewType } from './PercentOfView'\nimport { ResizeHandler, ResizeHandlerType } from './ResizeHandler'\nimport { ScrollBody, ScrollBodyType } from './ScrollBody'\nimport { ScrollBounds, ScrollBoundsType } from './ScrollBounds'\nimport { ScrollContain } from './ScrollContain'\nimport { ScrollLimit } from './ScrollLimit'\nimport { ScrollLooper, ScrollLooperType } from './ScrollLooper'\nimport { ScrollProgress, ScrollProgressType } from './ScrollProgress'\nimport { ScrollSnaps } from './ScrollSnaps'\nimport { SlideRegistry, SlideRegistryType } from './SlideRegistry'\nimport { ScrollTarget, ScrollTargetType } from './ScrollTarget'\nimport { ScrollTo, ScrollToType } from './ScrollTo'\nimport { SlideFocus, SlideFocusType } from './SlideFocus'\nimport { SlideLooper, SlideLooperType } from './SlideLooper'\nimport { SlidesHandler, SlidesHandlerType } from './SlidesHandler'\nimport { SlidesInView, SlidesInViewType } from './SlidesInView'\nimport { SlideSizes } from './SlideSizes'\nimport { SlidesToScroll, SlidesToScrollType } from './SlidesToScroll'\nimport { Translate, TranslateType } from './Translate'\nimport { arrayKeys, arrayLast, arrayLastIndex, WindowType } from './utils'\nimport { Vector1D, Vector1DType } from './Vector1d'\n\nexport type EngineType = {\n  ownerDocument: Document\n  ownerWindow: WindowType\n  eventHandler: EventHandlerType\n  axis: AxisType\n  direction: DirectionType\n  animation: AnimationsType\n  scrollBounds: ScrollBoundsType\n  scrollLooper: ScrollLooperType\n  scrollProgress: ScrollProgressType\n  index: CounterType\n  indexPrevious: CounterType\n  limit: LimitType\n  location: Vector1DType\n  offsetLocation: Vector1DType\n  options: OptionsType\n  percentOfView: PercentOfViewType\n  scrollBody: ScrollBodyType\n  dragHandler: DragHandlerType\n  eventStore: EventStoreType\n  slideLooper: SlideLooperType\n  slidesInView: SlidesInViewType\n  slidesToScroll: SlidesToScrollType\n  target: Vector1DType\n  translate: TranslateType\n  resizeHandler: ResizeHandlerType\n  slidesHandler: SlidesHandlerType\n  scrollTo: ScrollToType\n  scrollTarget: ScrollTargetType\n  scrollSnapList: number[]\n  scrollSnaps: number[]\n  slideIndexes: number[]\n  slideFocus: SlideFocusType\n  slideRegistry: SlideRegistryType['slideRegistry']\n  containerRect: NodeRectType\n  slideRects: NodeRectType[]\n}\n\nexport function Engine(\n  root: HTMLElement,\n  container: HTMLElement,\n  slides: HTMLElement[],\n  ownerDocument: Document,\n  ownerWindow: WindowType,\n  options: OptionsType,\n  eventHandler: EventHandlerType\n): EngineType {\n  // Options\n  const {\n    align,\n    axis: scrollAxis,\n    direction: contentDirection,\n    startIndex,\n    loop,\n    duration,\n    dragFree,\n    dragThreshold,\n    inViewThreshold,\n    slidesToScroll: groupSlides,\n    skipSnaps,\n    containScroll,\n    watchResize,\n    watchSlides,\n    watchDrag\n  } = options\n\n  // Measurements\n  const pixelTolerance = 2\n  const nodeRects = NodeRects()\n  const containerRect = nodeRects.measure(container)\n  const slideRects = slides.map(nodeRects.measure)\n  const direction = Direction(contentDirection)\n  const axis = Axis(scrollAxis, contentDirection)\n  const viewSize = axis.measureSize(containerRect)\n  const percentOfView = PercentOfView(viewSize)\n  const alignment = Alignment(align, viewSize)\n  const containSnaps = !loop && !!containScroll\n  const readEdgeGap = loop || !!containScroll\n  const { slideSizes, slideSizesWithGaps, startGap, endGap } = SlideSizes(\n    axis,\n    containerRect,\n    slideRects,\n    slides,\n    readEdgeGap,\n    ownerWindow\n  )\n  const slidesToScroll = SlidesToScroll(\n    axis,\n    direction,\n    viewSize,\n    groupSlides,\n    loop,\n    containerRect,\n    slideRects,\n    startGap,\n    endGap,\n    pixelTolerance\n  )\n  const { snaps, snapsAligned } = ScrollSnaps(\n    axis,\n    alignment,\n    containerRect,\n    slideRects,\n    slidesToScroll\n  )\n  const contentSize = -arrayLast(snaps) + arrayLast(slideSizesWithGaps)\n  const { snapsContained, scrollContainLimit } = ScrollContain(\n    viewSize,\n    contentSize,\n    snapsAligned,\n    containScroll,\n    pixelTolerance\n  )\n  const scrollSnaps = containSnaps ? snapsContained : snapsAligned\n  const { limit } = ScrollLimit(contentSize, scrollSnaps, loop)\n\n  // Indexes\n  const index = Counter(arrayLastIndex(scrollSnaps), startIndex, loop)\n  const indexPrevious = index.clone()\n  const slideIndexes = arrayKeys(slides)\n\n  // Animation\n  const update: AnimationsUpdateType = ({\n    dragHandler,\n    scrollBody,\n    scrollBounds,\n    options: { loop }\n  }) => {\n    if (!loop) scrollBounds.constrain(dragHandler.pointerDown())\n    scrollBody.seek()\n  }\n\n  const render: AnimationsRenderType = (\n    {\n      scrollBody,\n      translate,\n      location,\n      offsetLocation,\n      scrollLooper,\n      slideLooper,\n      dragHandler,\n      animation,\n      eventHandler,\n      options: { loop }\n    },\n    lagOffset\n  ) => {\n    const velocity = scrollBody.velocity()\n    const hasSettled = scrollBody.settled()\n\n    if (hasSettled && !dragHandler.pointerDown()) {\n      animation.stop()\n      eventHandler.emit('settle')\n    }\n    if (!hasSettled) eventHandler.emit('scroll')\n\n    offsetLocation.set(location.get() - velocity + velocity * lagOffset)\n\n    if (loop) {\n      scrollLooper.loop(scrollBody.direction())\n      slideLooper.loop()\n    }\n\n    translate.to(offsetLocation.get())\n  }\n  const animation = Animations(\n    ownerDocument,\n    ownerWindow,\n    () => update(engine),\n    (lagOffset: number) => render(engine, lagOffset)\n  )\n\n  // Shared\n  const friction = 0.68\n  const startLocation = scrollSnaps[index.get()]\n  const location = Vector1D(startLocation)\n  const offsetLocation = Vector1D(startLocation)\n  const target = Vector1D(startLocation)\n  const scrollBody = ScrollBody(\n    location,\n    offsetLocation,\n    target,\n    duration,\n    friction\n  )\n  const scrollTarget = ScrollTarget(\n    loop,\n    scrollSnaps,\n    contentSize,\n    limit,\n    target\n  )\n  const scrollTo = ScrollTo(\n    animation,\n    index,\n    indexPrevious,\n    scrollBody,\n    scrollTarget,\n    target,\n    eventHandler\n  )\n  const scrollProgress = ScrollProgress(limit)\n  const eventStore = EventStore()\n  const slidesInView = SlidesInView(\n    container,\n    slides,\n    eventHandler,\n    inViewThreshold\n  )\n  const { slideRegistry } = SlideRegistry(\n    containSnaps,\n    containScroll,\n    scrollSnaps,\n    scrollContainLimit,\n    slidesToScroll,\n    slideIndexes\n  )\n  const slideFocus = SlideFocus(\n    root,\n    slides,\n    slideRegistry,\n    scrollTo,\n    scrollBody,\n    eventStore\n  )\n\n  // Engine\n  const engine: EngineType = {\n    ownerDocument,\n    ownerWindow,\n    eventHandler,\n    containerRect,\n    slideRects,\n    animation,\n    axis,\n    direction,\n    dragHandler: DragHandler(\n      axis,\n      direction,\n      root,\n      ownerDocument,\n      ownerWindow,\n      target,\n      DragTracker(axis, ownerWindow),\n      location,\n      animation,\n      scrollTo,\n      scrollBody,\n      scrollTarget,\n      index,\n      eventHandler,\n      percentOfView,\n      dragFree,\n      dragThreshold,\n      skipSnaps,\n      friction,\n      watchDrag\n    ),\n    eventStore,\n    percentOfView,\n    index,\n    indexPrevious,\n    limit,\n    location,\n    offsetLocation,\n    options,\n    resizeHandler: ResizeHandler(\n      container,\n      eventHandler,\n      ownerWindow,\n      slides,\n      axis,\n      watchResize,\n      nodeRects\n    ),\n    scrollBody,\n    scrollBounds: ScrollBounds(\n      limit,\n      offsetLocation,\n      target,\n      scrollBody,\n      percentOfView\n    ),\n    scrollLooper: ScrollLooper(contentSize, limit, offsetLocation, [\n      location,\n      offsetLocation,\n      target\n    ]),\n    scrollProgress,\n    scrollSnapList: scrollSnaps.map(scrollProgress.get),\n    scrollSnaps,\n    scrollTarget,\n    scrollTo,\n    slideLooper: SlideLooper(\n      axis,\n      direction,\n      viewSize,\n      contentSize,\n      slideSizes,\n      slideSizesWithGaps,\n      snaps,\n      scrollSnaps,\n      offsetLocation,\n      slides\n    ),\n    slideFocus,\n    slidesHandler: SlidesHandler(container, eventHandler, watchSlides),\n    slidesInView,\n    slideIndexes,\n    slideRegistry,\n    slidesToScroll,\n    target,\n    translate: Translate(axis, direction, container)\n  }\n\n  return engine\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\n\ntype CallbackType = (emblaApi: EmblaCarouselType, evt: EmblaEventType) => void\ntype ListenersType = Partial<{ [key in EmblaEventType]: CallbackType[] }>\n\nexport type EmblaEventType = EmblaEventListType[keyof EmblaEventListType]\n\nexport interface EmblaEventListType {\n  init: 'init'\n  pointerDown: 'pointerDown'\n  pointerUp: 'pointerUp'\n  slidesChanged: 'slidesChanged'\n  slidesInView: 'slidesInView'\n  scroll: 'scroll'\n  select: 'select'\n  settle: 'settle'\n  destroy: 'destroy'\n  reInit: 'reInit'\n  resize: 'resize'\n}\n\nexport type EventHandlerType = {\n  init: (emblaApi: EmblaCarouselType) => void\n  emit: (evt: EmblaEventType) => EventHandlerType\n  on: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n  off: (evt: EmblaEventType, cb: CallbackType) => EventHandlerType\n}\n\nexport function EventHandler(): EventHandlerType {\n  const listeners: ListenersType = {}\n  let api: EmblaCarouselType\n\n  function init(emblaApi: EmblaCarouselType): void {\n    api = emblaApi\n  }\n\n  function getListeners(evt: EmblaEventType): CallbackType[] {\n    return listeners[evt] || []\n  }\n\n  function emit(evt: EmblaEventType): EventHandlerType {\n    getListeners(evt).forEach((e) => e(api, evt))\n    return self\n  }\n\n  function on(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).concat([cb])\n    return self\n  }\n\n  function off(evt: EmblaEventType, cb: CallbackType): EventHandlerType {\n    listeners[evt] = getListeners(evt).filter((e) => e !== cb)\n    return self\n  }\n\n  const self: EventHandlerType = {\n    init,\n    emit,\n    off,\n    on\n  }\n  return self\n}\n","import { AlignmentOptionType } from './Alignment'\nimport { AxisOptionType } from './Axis'\nimport { SlidesToScrollOptionType } from './SlidesToScroll'\nimport { DirectionOptionType } from './Direction'\nimport { ScrollContainOptionType } from './ScrollContain'\nimport { DragHandlerOptionType } from './DragHandler'\nimport { ResizeHandlerOptionType } from './ResizeHandler'\nimport { SlidesHandlerOptionType } from './SlidesHandler'\nimport { SlidesInViewOptionsType } from './SlidesInView'\n\nexport type LooseOptionsType = {\n  [key: string]: unknown\n}\n\nexport type CreateOptionsType<Type extends LooseOptionsType> = Type & {\n  active: boolean\n  breakpoints: {\n    [key: string]: Omit<Partial<CreateOptionsType<Type>>, 'breakpoints'>\n  }\n}\n\nexport type OptionsType = CreateOptionsType<{\n  align: AlignmentOptionType\n  axis: AxisOptionType\n  container: string | HTMLElement | null\n  slides: string | HTMLElement[] | NodeListOf<HTMLElement> | null\n  containScroll: ScrollContainOptionType\n  direction: DirectionOptionType\n  slidesToScroll: SlidesToScrollOptionType\n  dragFree: boolean\n  dragThreshold: number\n  inViewThreshold: SlidesInViewOptionsType\n  loop: boolean\n  skipSnaps: boolean\n  duration: number\n  startIndex: number\n  watchDrag: DragHandlerOptionType\n  watchResize: ResizeHandlerOptionType\n  watchSlides: SlidesHandlerOptionType\n}>\n\nexport const defaultOptions: OptionsType = {\n  align: 'center',\n  axis: 'x',\n  container: null,\n  slides: null,\n  containScroll: 'trimSnaps',\n  direction: 'ltr',\n  slidesToScroll: 1,\n  inViewThreshold: 0,\n  breakpoints: {},\n  dragFree: false,\n  dragThreshold: 10,\n  loop: false,\n  skipSnaps: false,\n  duration: 25,\n  startIndex: 0,\n  active: true,\n  watchDrag: true,\n  watchResize: true,\n  watchSlides: true\n}\n\nexport type EmblaOptionsType = Partial<OptionsType>\n","import { LooseOptionsType, CreateOptionsType } from './Options'\nimport { objectKeys, objectsMergeDeep, WindowType } from './utils'\n\ntype OptionsType = Partial<CreateOptionsType<LooseOptionsType>>\n\nexport type OptionsHandlerType = {\n  mergeOptions: <TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ) => TypeA\n  optionsAtMedia: <Type extends OptionsType>(options: Type) => Type\n  optionsMediaQueries: (optionsList: OptionsType[]) => MediaQueryList[]\n}\n\nexport function OptionsHandler(ownerWindow: WindowType): OptionsHandlerType {\n  function mergeOptions<TypeA extends OptionsType, TypeB extends OptionsType>(\n    optionsA: TypeA,\n    optionsB?: TypeB\n  ): TypeA {\n    return <TypeA>objectsMergeDeep(optionsA, optionsB || {})\n  }\n\n  function optionsAtMedia<Type extends OptionsType>(options: Type): Type {\n    const optionsAtMedia = options.breakpoints || {}\n    const matchedMediaOptions = objectKeys(optionsAtMedia)\n      .filter((media) => ownerWindow.matchMedia(media).matches)\n      .map((media) => optionsAtMedia[media])\n      .reduce((a, mediaOption) => mergeOptions(a, mediaOption), {})\n\n    return mergeOptions(options, matchedMediaOptions)\n  }\n\n  function optionsMediaQueries(optionsList: OptionsType[]): MediaQueryList[] {\n    return optionsList\n      .map((options) => objectKeys(options.breakpoints || {}))\n      .reduce((acc, mediaQueries) => acc.concat(mediaQueries), [])\n      .map(ownerWindow.matchMedia)\n  }\n\n  const self: OptionsHandlerType = {\n    mergeOptions,\n    optionsAtMedia,\n    optionsMediaQueries\n  }\n  return self\n}\n","import { EmblaCarouselType } from './EmblaCarousel'\nimport { OptionsHandlerType } from './OptionsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\n\nexport type PluginsHandlerType = {\n  init: (\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ) => EmblaPluginsType\n  destroy: () => void\n}\n\nexport function PluginsHandler(\n  optionsHandler: OptionsHandlerType\n): PluginsHandlerType {\n  let activePlugins: EmblaPluginType[] = []\n\n  function init(\n    emblaApi: EmblaCarouselType,\n    plugins: EmblaPluginType[]\n  ): EmblaPluginsType {\n    activePlugins = plugins.filter(\n      ({ options }) => optionsHandler.optionsAtMedia(options).active !== false\n    )\n    activePlugins.forEach((plugin) => plugin.init(emblaApi, optionsHandler))\n\n    return plugins.reduce(\n      (map, plugin) => Object.assign(map, { [plugin.name]: plugin }),\n      {}\n    )\n  }\n\n  function destroy(): void {\n    activePlugins = activePlugins.filter((plugin) => plugin.destroy())\n  }\n\n  const self: PluginsHandlerType = {\n    init,\n    destroy\n  }\n  return self\n}\n","import { Engine, EngineType } from './Engine'\nimport { EventStore } from './EventStore'\nimport { EventHandler, EventHandlerType } from './EventHandler'\nimport { defaultOptions, EmblaOptionsType, OptionsType } from './Options'\nimport { OptionsHandler } from './OptionsHandler'\nimport { PluginsHandler } from './PluginsHandler'\nimport { EmblaPluginsType, EmblaPluginType } from './Plugins'\nimport { isString, WindowType } from './utils'\n\nexport type EmblaCarouselType = {\n  canScrollNext: () => boolean\n  canScrollPrev: () => boolean\n  containerNode: () => HTMLElement\n  internalEngine: () => EngineType\n  destroy: () => void\n  off: EventHandlerType['off']\n  on: EventHandlerType['on']\n  emit: EventHandlerType['emit']\n  plugins: () => EmblaPluginsType\n  previousScrollSnap: () => number\n  reInit: (options?: EmblaOptionsType, plugins?: EmblaPluginType[]) => void\n  rootNode: () => HTMLElement\n  scrollNext: (jump?: boolean) => void\n  scrollPrev: (jump?: boolean) => void\n  scrollProgress: () => number\n  scrollSnapList: () => number[]\n  scrollTo: (index: number, jump?: boolean) => void\n  selectedScrollSnap: () => number\n  slideNodes: () => HTMLElement[]\n  slidesInView: () => number[]\n  slidesNotInView: () => number[]\n}\n\nfunction EmblaCarousel(\n  root: HTMLElement,\n  userOptions?: EmblaOptionsType,\n  userPlugins?: EmblaPluginType[]\n): EmblaCarouselType {\n  const ownerDocument = root.ownerDocument\n  const ownerWindow = <WindowType>ownerDocument.defaultView\n  const optionsHandler = OptionsHandler(ownerWindow)\n  const pluginsHandler = PluginsHandler(optionsHandler)\n  const mediaHandlers = EventStore()\n  const eventHandler = EventHandler()\n  const { mergeOptions, optionsAtMedia, optionsMediaQueries } = optionsHandler\n  const { on, off, emit } = eventHandler\n  const reInit = reActivate\n\n  let destroyed = false\n  let engine: EngineType\n  let optionsBase = mergeOptions(defaultOptions, EmblaCarousel.globalOptions)\n  let options = mergeOptions(optionsBase)\n  let pluginList: EmblaPluginType[] = []\n  let pluginApis: EmblaPluginsType\n\n  let container: HTMLElement\n  let slides: HTMLElement[]\n\n  function storeElements(): void {\n    const { container: userContainer, slides: userSlides } = options\n\n    const customContainer = isString(userContainer)\n      ? root.querySelector(userContainer)\n      : userContainer\n    container = <HTMLElement>(customContainer || root.children[0])\n\n    const customSlides = isString(userSlides)\n      ? container.querySelectorAll(userSlides)\n      : userSlides\n    slides = <HTMLElement[]>[].slice.call(customSlides || container.children)\n  }\n\n  function createEngine(options: OptionsType): EngineType {\n    const engine = Engine(\n      root,\n      container,\n      slides,\n      ownerDocument,\n      ownerWindow,\n      options,\n      eventHandler\n    )\n\n    if (options.loop && !engine.slideLooper.canLoop()) {\n      const optionsWithoutLoop = Object.assign({}, options, { loop: false })\n      return createEngine(optionsWithoutLoop)\n    }\n    return engine\n  }\n\n  function activate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    if (destroyed) return\n\n    optionsBase = mergeOptions(optionsBase, withOptions)\n    options = optionsAtMedia(optionsBase)\n    pluginList = withPlugins || pluginList\n\n    storeElements()\n\n    engine = createEngine(options)\n\n    optionsMediaQueries([\n      optionsBase,\n      ...pluginList.map(({ options }) => options)\n    ]).forEach((query) => mediaHandlers.add(query, 'change', reActivate))\n\n    if (!options.active) return\n\n    engine.translate.to(engine.location.get())\n    engine.animation.init()\n    engine.slidesInView.init()\n    engine.slideFocus.init()\n    engine.eventHandler.init(self)\n    engine.resizeHandler.init(self)\n    engine.slidesHandler.init(self)\n\n    if (engine.options.loop) engine.slideLooper.loop()\n    if (container.offsetParent && slides.length) engine.dragHandler.init(self)\n\n    pluginApis = pluginsHandler.init(self, pluginList)\n  }\n\n  function reActivate(\n    withOptions?: EmblaOptionsType,\n    withPlugins?: EmblaPluginType[]\n  ): void {\n    const startIndex = selectedScrollSnap()\n    deActivate()\n    activate(mergeOptions({ startIndex }, withOptions), withPlugins)\n    eventHandler.emit('reInit')\n  }\n\n  function deActivate(): void {\n    engine.dragHandler.destroy()\n    engine.eventStore.clear()\n    engine.translate.clear()\n    engine.slideLooper.clear()\n    engine.resizeHandler.destroy()\n    engine.slidesHandler.destroy()\n    engine.slidesInView.destroy()\n    engine.animation.destroy()\n    pluginsHandler.destroy()\n    mediaHandlers.clear()\n  }\n\n  function destroy(): void {\n    if (destroyed) return\n    destroyed = true\n    mediaHandlers.clear()\n    deActivate()\n    eventHandler.emit('destroy')\n  }\n\n  function scrollTo(index: number, jump?: boolean, direction?: number): void {\n    if (!options.active || destroyed) return\n    engine.scrollBody\n      .useBaseFriction()\n      .useDuration(jump === true ? 0 : options.duration)\n    engine.scrollTo.index(index, direction || 0)\n  }\n\n  function scrollNext(jump?: boolean): void {\n    const next = engine.index.add(1).get()\n    scrollTo(next, jump, -1)\n  }\n\n  function scrollPrev(jump?: boolean): void {\n    const prev = engine.index.add(-1).get()\n    scrollTo(prev, jump, 1)\n  }\n\n  function canScrollNext(): boolean {\n    const next = engine.index.add(1).get()\n    return next !== selectedScrollSnap()\n  }\n\n  function canScrollPrev(): boolean {\n    const prev = engine.index.add(-1).get()\n    return prev !== selectedScrollSnap()\n  }\n\n  function scrollSnapList(): number[] {\n    return engine.scrollSnapList\n  }\n\n  function scrollProgress(): number {\n    return engine.scrollProgress.get(engine.location.get())\n  }\n\n  function selectedScrollSnap(): number {\n    return engine.index.get()\n  }\n\n  function previousScrollSnap(): number {\n    return engine.indexPrevious.get()\n  }\n\n  function slidesInView(): number[] {\n    return engine.slidesInView.get()\n  }\n\n  function slidesNotInView(): number[] {\n    return engine.slidesInView.get(false)\n  }\n\n  function plugins(): EmblaPluginsType {\n    return pluginApis\n  }\n\n  function internalEngine(): EngineType {\n    return engine\n  }\n\n  function rootNode(): HTMLElement {\n    return root\n  }\n\n  function containerNode(): HTMLElement {\n    return container\n  }\n\n  function slideNodes(): HTMLElement[] {\n    return slides\n  }\n\n  const self: EmblaCarouselType = {\n    canScrollNext,\n    canScrollPrev,\n    containerNode,\n    internalEngine,\n    destroy,\n    off,\n    on,\n    emit,\n    plugins,\n    previousScrollSnap,\n    reInit,\n    rootNode,\n    scrollNext,\n    scrollPrev,\n    scrollProgress,\n    scrollSnapList,\n    scrollTo,\n    selectedScrollSnap,\n    slideNodes,\n    slidesInView,\n    slidesNotInView\n  }\n\n  activate(userOptions, userPlugins)\n  setTimeout(() => eventHandler.emit('init'), 0)\n  return self\n}\n\nEmblaCarousel.globalOptions = <EmblaOptionsType | undefined>undefined\n\nexport default EmblaCarousel\n","exports.interopDefault = function (a) {\n  return a && a.__esModule ? a : {default: a};\n};\n\nexports.defineInteropFlag = function (a) {\n  Object.defineProperty(a, '__esModule', {value: true});\n};\n\nexports.exportAll = function (source, dest) {\n  Object.keys(source).forEach(function (key) {\n    if (key === 'default' || key === '__esModule' || dest.hasOwnProperty(key)) {\n      return;\n    }\n\n    Object.defineProperty(dest, key, {\n      enumerable: true,\n      get: function () {\n        return source[key];\n      },\n    });\n  });\n\n  return dest;\n};\n\nexports.export = function (dest, destName, get) {\n  Object.defineProperty(dest, destName, {\n    enumerable: true,\n    get: get,\n  });\n};\n"],"names":["isNumber","subject","isString","isBoolean","isObject","Object","prototype","toString","call","mathAbs","n","Math","abs","mathSign","sign","deltaAbs","valueB","valueA","factorAbs","diff","arrayKeys","array","objectKeys","map","Number","arrayLast","arrayLastIndex","max","length","arrayIsLastIndex","index","arrayFromNumber","startAt","Array","from","_","i","object","keys","objectsMergeDeep","objectA","objectB","reduce","mergedObjects","currentObject","forEach","key","areObjects","isMouseEvent","evt","ownerWindow","MouseEvent","Alignment","align","viewSize","predefined","start","center","end","measure","self","EventStore","listeners","add","node","type","handler","options","passive","removeListener","addEventListener","removeEventListener","legacyMediaQueryList","addListener","push","clear","filter","remove","Animations","ownerDocument","update","render","documentVisibleHandler","timeStep","lastTimeStamp","lag","animationFrame","init","hidden","reset","destroy","stop","animate","timeStamp","elapsed","lagOffset","requestAnimationFrame","cancelAnimationFrame","Axis","axis","direction","scroll","cross","startEdge","getStartEdge","endEdge","getEndEdge","measureSize","nodeRect","width","height","Limit","min","reachedMin","reachedMax","reachedAny","constrain","removeOffset","ceil","Counter","loop","loopEnd","counter","withinLimit","get","set","clone","Direction","apply","DragHandler","rootNode","target","dragTracker","location","animation","scrollTo","scrollBody","scrollTarget","eventHandler","percentOfView","dragFree","dragThreshold","skipSnaps","baseFriction","watchDrag","crossAxis","focusNodes","nonPassiveEvent","initEvents","dragEvents","goToNextThreshold","snapForceBoost","mouse","touch","freeForceBoost","baseSpeed","isMoving","startScroll","startCross","pointerIsDown","preventScroll","preventClick","isMouse","emblaApi","downIfAllowed","down","preventDefault","undefined","up","click","addDragEvents","move","isFocusNode","nodeName","includes","forceBoost","boost","allowedForce","force","targetChanged","next","baseForce","byDistance","distance","byIndex","isMouseEvt","button","buttons","pointerDown","useFriction","useDuration","readPoint","emit","lastScroll","lastCross","diffScroll","diffCross","cancelable","pointerMove","currentLocation","rawForce","pointerUp","forceFactor","speed","friction","stopPropagation","DragTracker","logInterval","startEvent","lastEvent","readTime","evtAxis","property","coord","touches","expired","diffDrag","diffTime","isFlick","NodeRects","offsetTop","offsetLeft","offsetWidth","offsetHeight","offset","top","right","bottom","left","PercentOfView","ResizeHandler","container","slides","watchResize","nodeRects","resizeObserver","containerSize","slideSizes","destroyed","readSize","defaultCallback","entries","entry","isContainer","slideIndex","indexOf","lastSize","newSize","diffSize","reInit","ResizeObserver","observeNodes","concat","observe","disconnect","ScrollBody","offsetLocation","baseDuration","bodyVelocity","scrollDirection","scrollDuration","scrollFriction","rawLocation","rawLocationPrevious","seek","isInstant","directionDiff","settled","duration","velocity","useBaseDuration","useBaseFriction","ScrollBounds","limit","pullBackThreshold","edgeOffsetTolerance","frictionLimit","disabled","shouldConstrain","edge","diffToEdge","diffToTarget","subtract","toggleActive","active","ScrollContain","contentSize","snapsAligned","containScroll","pixelTolerance","scrollBounds","snapsBounded","measureBounded","scrollContainLimit","findScrollContainLimit","snapsContained","measureContained","usePixelTolerance","bound","snap","startSnap","endSnap","lastIndexOf","snapAligned","isFirst","isLast","scrollBound","parseFloat","toFixed","slice","ScrollLimit","scrollSnaps","ScrollLooper","vectors","jointSafety","shouldLoop","loopDistance","v","ScrollProgress","ScrollSnaps","alignment","containerRect","slideRects","slidesToScroll","groupSlides","alignments","measureSizes","snaps","measureUnaligned","measureAligned","rects","rect","g","SlideRegistry","containSnaps","slideIndexes","slideRegistry","createSlideRegistry","groupedSlideIndexes","doNotContain","group","groups","range","ScrollTarget","targetVector","minDistance","distances","sort","a","b","findTargetSnap","ascDiffsToSnaps","scrollSnap","diffToSnap","shortcut","d1","d2","targets","matchingTargets","t","targetSnapDistance","reachedBound","snapDistance","ScrollTo","indexCurrent","indexPrevious","distanceDiff","indexDiff","targetIndex","SlideFocus","root","eventStore","lastTabPressTime","document","registerTabPress","addSlideFocusEvent","event","code","Date","getTime","slide","focus","nowTime","scrollLeft","findIndex","capture","Vector1D","initialValue","value","normalizeInput","Translate","translate","x","y","containerStyle","style","to","transform","getAttribute","removeAttribute","SlideLooper","slideSizesWithGaps","roundingSafety","ascItems","descItems","reverse","loopPoints","startPoints","endPoints","removeSlideSizes","indexes","slidesInGap","gap","remainingGap","findSlideBounds","findLoopPoints","isEndEdge","slideBounds","initial","altered","boundEdge","loopPoint","slideLocation","canLoop","every","otherIndexes","shiftLocation","SlidesHandler","watchSlides","mutationObserver","mutations","mutation","MutationObserver","childList","SlidesInView","threshold","intersectionEntryMap","inViewCache","notInViewCache","intersectionObserver","IntersectionObserver","parentElement","createInViewList","inView","list","parseInt","isIntersecting","inViewMatch","notInViewMatch","SlideSizes","readEdgeGap","withEdgeGap","startGap","measureStartGap","endGap","measureEndGap","measureWithGaps","slideRect","getComputedStyle","getPropertyValue","SlidesToScroll","groupByNumber","byNumber","groupSize","bySize","rectB","rectA","edgeA","edgeB","gapA","gapB","chunkSize","currentSize","previousSize","Engine","scrollAxis","contentDirection","startIndex","inViewThreshold","dragHandler","scrollLooper","slideLooper","hasSettled","engine","startLocation","scrollProgress","slidesInView","slideFocus","resizeHandler","scrollSnapList","slidesHandler","EventHandler","api","getListeners","e","on","cb","off","defaultOptions","breakpoints","OptionsHandler","mergeOptions","optionsA","optionsB","optionsAtMedia","matchedMediaOptions","media","matchMedia","matches","mediaOption","optionsMediaQueries","optionsList","acc","mediaQueries","PluginsHandler","optionsHandler","activePlugins","plugins","plugin","assign","name","EmblaCarousel","userOptions","userPlugins","defaultView","pluginsHandler","mediaHandlers","reActivate","optionsBase","globalOptions","pluginList","pluginApis","storeElements","userContainer","userSlides","customContainer","querySelector","children","customSlides","querySelectorAll","createEngine","optionsWithoutLoop","activate","withOptions","withPlugins","query","offsetParent","selectedScrollSnap","deActivate","jump","scrollNext","scrollPrev","prev","canScrollNext","canScrollPrev","previousScrollSnap","slidesNotInView","internalEngine","containerNode","slideNodes","setTimeout"],"version":3,"file":"index.0641b553.js.map","sourceRoot":"/__parcel_source_root/"}